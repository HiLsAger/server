var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,0.756,1,1.894]],["body/modules/AppModule.html",[0,1.269,1,3.659,2,1.326,3,1.463,4,1.792,5,1.792,6,1.463,7,1.792,8,1.792,9,2.965,10,2.965,11,3.162,12,0.037,13,3.162,14,2.301,15,1.792,16,1.792,17,0.383,18,0.383,19,0.324,20,3.591,21,2.301,22,0.543,23,0.895,24,3.591,25,3.591,26,0.383,27,0.097,28,0.028,29,0.028]],["title/controllers/AuthController.html",[30,1.686,31,2.154]],["body/controllers/AuthController.html",[12,0.038,17,0.268,18,0.268,19,0.227,22,0.561,23,0.626,26,0.268,27,0.068,28,0.022,29,0.022,30,2.01,31,2.569,32,1.57,33,2.075,34,0.404,35,1.804,36,2.984,37,2.113,38,3.615,39,2.984,40,2.075,41,2.311,42,1.419,43,3.615,44,0.952,45,2.513,46,1.725,47,1.492,48,0.68,49,1.287,50,3.486,51,1.906,52,2.513,53,1.041,54,2.075,55,2.513,56,2.513,57,2.113,58,1.131,59,2.075,60,2.311,61,3.615,62,2.513,63,2.075,64,2.075,65,2.075,66,1.57,67,1.397,68,2.075,69,2.984,70,1.131,71,0.764,72,1.786,73,1.335,74,2.075,75,1.786,76,1.254,77,2.075,78,2.513,79,1.725,80,2.513,81,2.513,82,2.513,83,1.397,84,2.075,85,2.513,86,2.513,87,0.928,88,2.075,89,1.473,90,1.254,91,2.513,92,2.075,93,2.513,94,1.57,95,2.513,96,0.928,97,2.513,98,2.513]],["title/guards/AuthGuard.html",[67,1.686,99,2.154]],["body/guards/AuthGuard.html",[12,0.038,17,0.29,18,0.29,19,0.245,22,0.539,23,0.678,26,0.407,27,0.073,28,0.024,29,0.024,34,0.437,35,1.908,37,2.207,44,0.86,46,1.557,47,1.163,48,0.614,49,1.163,51,1.224,53,0.611,57,2.207,58,1.224,67,2.126,73,1.772,75,1.932,76,1.357,79,1.557,83,2.126,100,2.719,101,1.932,102,4.798,103,1.699,104,2.719,105,2.719,106,3.824,107,4.173,108,2.719,109,3.824,110,3.824,111,1.557,112,3.651,113,3.156,114,2.719,115,1.932,116,2.719,117,2.245,118,2.719,119,1.932,120,2.719,121,3.158,122,3.156,123,2.719,124,2.719,125,2.719,126,3.156,127,2.717,128,2.997,129,1.699,130,2.719,131,0.749,132,3.156,133,2.719,134,2.245,135,2.245]],["title/modules/AuthModule.html",[0,0.756,136,1.513]],["body/modules/AuthModule.html",[0,1.24,2,1.263,3,1.393,4,1.707,5,1.707,6,1.393,7,2.483,8,2.483,12,0.037,14,2.229,15,1.707,16,1.707,17,0.364,18,0.364,19,0.309,21,1.707,22,0.562,23,0.853,26,0.364,27,0.092,28,0.028,29,0.028,53,0.769,73,2.215,74,2.823,119,2.43,136,2.853,137,2.823,138,2.823,139,2.823,140,3.42,141,4.468,142,2.43,143,1.539,144,3.42]],["title/injectables/AuthService.html",[73,1.12,111,1.235]],["body/injectables/AuthService.html",[12,0.038,17,0.349,18,0.349,19,0.296,22,0.519,23,0.817,26,0.349,27,0.088,28,0.027,29,0.027,34,0.526,35,2.167,37,2.431,44,0.977,46,1.769,47,1.321,48,0.526,49,1.321,51,1.475,53,0.977,58,1.475,73,1.604,76,1.635,79,1.335,83,1.822,96,1.21,103,2.047,111,1.769,119,2.329,121,2.047,128,2.713,129,2.047,131,1.343,143,1.475,145,2.047,146,2.705,147,4.344,148,2.705,149,3.277,150,3.586,151,4.344,152,3.277,153,4.344,154,2.329,155,2.705,156,2.329,157,2.329,158,2.705,159,3.277]],["title/injectables/AuthService-1.html",[73,0.938,111,1.034,160,2.096]],["body/injectables/AuthService-1.html",[12,0.038,17,0.277,18,0.277,19,0.235,22,0.551,23,0.649,26,0.277,27,0.07,28,0.023,29,0.023,34,0.418,35,1.851,36,3.061,37,2.58,39,3.061,40,3.061,41,2.348,44,0.971,46,1.759,47,1.313,48,0.596,49,1.313,50,2.635,51,1.669,53,0.834,58,1.669,59,3.061,60,2.348,65,2.15,66,1.627,73,1.37,76,1.299,79,1.511,90,1.299,103,1.627,111,1.511,112,3.061,121,2.316,126,2.15,127,1.85,128,2.698,129,2.94,143,1.172,145,1.627,148,2.15,150,3.061,154,1.85,155,2.15,156,1.85,157,1.85,158,2.15,161,2.15,162,2.604,163,2.604,164,2.604,165,2.635,166,1.85,167,2.604,168,2.604,169,4.706,170,3.709,171,3.709,172,2.604,173,1.627,174,2.604]],["title/classes/Comment.html",[27,0.082,175,1.016]],["body/classes/Comment.html",[12,0.038,17,0.239,18,0.239,19,0.203,22,0.499,26,0.239,27,0.06,28,0.02,29,0.02,34,0.361,42,1.787,44,1.199,48,0.856,49,1.493,53,1.104,71,1.493,87,1.465,89,1.788,94,2.478,96,1.813,131,0.917,175,1.116,176,0.829,177,1.853,178,2.079,179,2.478,180,1.116,181,3.118,182,3.968,183,2.819,184,3.968,185,3.175,186,2.365,187,2.245,188,1.595,189,2.245,190,3.175,191,2.819,192,2.245,193,2.245,194,2.245,195,3.329,196,2.245,197,2.245,198,3.329,199,2.245,200,2.245,201,2.245,202,1.402,203,2.079,204,1.661,205,2.079,206,3.118,207,1.402,208,1.402,209,1.248,210,3.118,211,2.079,212,1.851,213,1.12,214,1.595,215,1.595,216,1.595,217,1.402,218,1.595,219,1.595,220,1.402,221,1.595,222,2.741,223,1.853]],["title/classes/CommentInput.html",[27,0.082,224,1.686]],["body/classes/CommentInput.html",[12,0.038,17,0.357,18,0.357,19,0.303,22,0.47,26,0.47,27,0.133,28,0.027,29,0.027,34,0.539,42,1.478,44,0.992,48,0.708,70,1.51,87,2.009,89,1.796,131,1.358,175,1.651,176,1.239,180,1.478,224,2.452,225,2.383,226,2.755,227,3.27,228,3.354,229,4.068,230,3.354,231,3.27,232,2.768,233,1.865,234,1.865,235,2.218,236,2.768]],["title/modules/DatabaseModule.html",[0,0.756,237,1.686]],["body/modules/DatabaseModule.html",[0,1.211,2,1.44,12,0.038,17,0.415,18,0.415,19,0.352,21,1.946,22,0.564,23,0.972,26,0.415,27,0.105,28,0.03,29,0.03,90,1.946,142,2.771,143,1.755,237,2.701,238,3.9,239,3.759,240,3.9,241,3.9,242,3.9,243,3.219,244,3.9,245,3.9,246,3.9,247,3.9]],["title/classes/LoginInput.html",[27,0.082,41,1.513]],["body/classes/LoginInput.html",[12,0.038,17,0.327,18,0.327,19,0.277,22,0.443,26,0.443,27,0.127,28,0.026,29,0.026,34,0.493,41,2.073,42,1.393,44,0.934,47,0.933,48,0.667,60,1.531,70,1.381,90,2.52,131,1.56,173,3.155,176,1.133,180,1.393,226,2.596,227,3.476,231,3.476,233,1.706,235,2.449,248,2.179,249,3.43,250,3.067,251,3.067,252,4.594,253,2.179]],["title/modules/ModulesModule.html",[0,0.756,11,1.686]],["body/modules/ModulesModule.html",[0,1.269,2,1.326,3,1.463,4,1.792,5,1.792,6,1.463,7,1.792,8,1.792,11,3.258,12,0.037,14,2.301,15,1.792,16,1.792,17,0.383,18,0.383,19,0.324,21,2.301,22,0.543,23,0.895,26,0.383,27,0.097,28,0.028,29,0.028,136,2.838,237,3.162,243,2.965,254,2.965,255,2.965,256,3.591,257,2.965]],["title/modules/PagesModule.html",[0,0.756,13,1.686]],["body/modules/PagesModule.html",[0,1.269,2,1.326,3,1.463,4,1.792,5,1.792,6,1.463,7,1.792,8,1.792,12,0.037,13,3.258,14,2.301,15,1.792,16,1.792,17,0.383,18,0.383,19,0.324,21,2.301,22,0.543,23,0.895,26,0.383,27,0.097,28,0.028,29,0.028,136,2.838,257,2.965,258,2.965,259,2.965,260,3.162,261,3.591,262,3.591]],["title/classes/RegisterInput.html",[27,0.082,60,1.513]],["body/classes/RegisterInput.html",[12,0.038,17,0.303,18,0.303,19,0.257,22,0.42,26,0.42,27,0.122,28,0.024,29,0.024,34,0.457,41,1.42,42,1.64,44,1.1,47,1.378,48,0.786,60,1.969,70,1.28,90,2.442,131,1.575,173,3.057,176,1.051,180,1.322,226,3.057,227,3.407,231,3.407,233,1.582,235,2.394,248,2.021,249,4.039,252,4.502,253,3.219,263,2.845,264,2.845,265,2.845,266,2.845]],["title/classes/Status.html",[27,0.082,96,1.12]],["body/classes/Status.html",[12,0.038,17,0.275,18,0.275,19,0.233,22,0.528,26,0.275,27,0.069,28,0.023,29,0.023,34,0.414,42,1.727,44,1.159,47,1.307,48,0.828,49,1.567,53,0.828,71,1.12,87,1.587,96,1.587,131,1.292,175,1.235,176,0.953,178,2.302,179,2.684,180,1.235,185,2.684,190,3.314,202,1.612,203,2.302,204,1.839,205,2.302,207,1.612,208,1.612,209,1.435,211,2.302,212,2.049,213,1.288,214,1.834,215,1.834,217,1.612,218,3.053,220,1.612,222,1.612,267,2.13,268,4.297,269,3.547,270,2.684,271,3.547,272,2.581,273,2.581,274,2.581,275,2.581,276,2.581,277,2.618,278,2.581,279,2.581,280,2.581,281,3.869,282,2.13,283,2.581,284,2.581]],["title/classes/User.html",[27,0.082,53,0.682]],["body/classes/User.html",[12,0.038,17,0.192,18,0.192,19,0.162,22,0.48,26,0.192,27,0.048,28,0.017,29,0.017,34,0.289,42,1.776,44,1.223,46,0.733,47,1.191,48,0.863,49,1.431,51,0.81,53,0.633,71,0.855,79,0.733,83,1.926,87,1.279,90,1.728,92,2.859,94,2.163,96,1.663,131,1.528,165,1.999,173,2.163,175,0.943,176,0.665,178,1.757,179,2.163,180,0.943,181,2.782,185,2.939,186,1.999,188,1.279,190,2.939,191,1.279,202,1.124,203,1.757,204,1.404,205,1.757,206,1.999,207,1.124,208,1.124,209,1.001,210,1.999,211,1.757,212,1.564,213,0.898,214,1.279,216,1.279,217,1.124,218,2.461,219,1.279,220,1.124,221,1.279,222,1.757,253,2.461,269,1.486,270,2.163,271,2.322,277,3.344,281,2.859,282,1.486,285,1.486,286,3.463,287,2.813,288,3.718,289,2.813,290,1.8,291,1.8,292,1.8,293,1.8,294,1.8,295,1.8,296,1.8,297,1.8,298,1.486,299,1.8,300,1.8,301,1.8,302,1.8,303,1.8,304,1.8,305,1.8,306,1.8,307,1.8,308,1.8,309,1.8,310,1.486,311,1.8,312,1.486,313,4.249,314,3.507,315,1.8,316,1.8,317,1.8,318,1.8,319,1.8,320,1.8,321,1.8]],["title/classes/Video.html",[27,0.082,71,0.922]],["body/classes/Video.html",[12,0.038,17,0.25,18,0.25,19,0.212,22,0.478,26,0.25,27,0.063,28,0.021,29,0.021,34,0.377,42,1.772,44,1.189,48,0.849,49,1.364,53,1.122,71,1.047,87,1.505,89,1.402,94,2.545,96,1.843,131,1.236,176,0.867,178,2.15,179,2.545,180,1.154,181,3.187,183,2.895,185,3.221,186,2.446,188,1.669,190,2.983,191,2.446,202,1.467,203,2.15,204,1.718,205,2.15,206,2.895,207,1.467,208,1.467,209,1.306,210,2.895,211,2.15,212,1.914,213,1.172,215,1.669,216,1.669,217,1.467,219,1.669,220,1.467,221,1.669,222,2.545,223,1.939,235,1.834,270,1.467,277,2.895,288,2.841,298,1.939,312,1.939,314,3.363,322,1.939,323,3.363,324,2.349,325,2.349,326,2.349,327,2.349,328,2.349,329,2.349,330,2.349,331,2.349,332,2.349,333,2.349]],["title/classes/VideoInput.html",[27,0.082,234,1.686]],["body/classes/VideoInput.html",[12,0.038,17,0.375,18,0.375,19,0.318,22,0.485,26,0.485,27,0.136,28,0.028,29,0.028,34,0.565,42,1.179,44,0.791,48,0.565,70,1.583,87,1.68,89,1.433,131,1.39,175,1.179,176,1.299,180,1.525,224,1.956,225,2.5,226,2.197,227,3.331,229,3.756,231,3.331,232,2.904,233,1.956,234,2.53,235,2.27,236,4.163,334,3.518]],["title/controllers/VideosController.html",[30,1.686,335,1.894]],["body/controllers/VideosController.html",[12,0.038,17,0.179,18,0.179,19,0.34,22,0.545,23,0.419,26,0.179,27,0.045,28,0.016,29,0.016,30,0.934,32,1.05,34,0.27,35,1.33,37,2.444,42,1.536,44,1.031,46,1.674,47,1.446,48,0.66,49,1.25,50,3.257,51,2.063,53,1.128,54,2.734,57,2.599,58,1.491,63,1.387,64,1.387,66,1.05,67,0.934,68,1.387,69,3.112,70,0.756,71,0.511,75,1.194,76,0.839,77,1.387,79,1.937,83,1.842,84,3.112,87,1.223,89,1.782,115,1.194,131,0.463,224,2.096,234,2.096,270,1.05,335,1.665,336,1.387,337,1.68,338,2.665,339,3.312,340,2.665,341,2.2,342,3.112,343,3.112,344,2.665,345,1.68,346,1.68,347,1.68,348,1.68,349,2.734,350,1.68,351,1.68,352,1.68,353,2.665,354,1.68,355,1.387,356,1.68,357,1.68,358,1.68,359,1.68,360,2.665,361,1.68,362,1.68,363,2.665,364,1.68,365,2.2,366,1.68,367,3.312,368,1.68,369,1.68,370,2.665,371,1.68,372,1.68,373,1.33,374,1.387,375,2.2,376,1.68,377,2.2,378,1.68,379,1.387,380,1.387,381,1.68,382,1.68,383,1.68,384,1.68,385,1.387,386,1.68,387,1.68,388,1.68,389,1.68,390,1.68,391,1.68,392,1.68,393,1.68,394,1.68,395,1.68,396,1.68,397,1.68,398,1.68,399,1.68,400,1.68,401,1.68,402,1.68,403,1.68,404,1.68,405,1.68,406,1.68,407,1.68,408,1.68,409,1.68]],["title/modules/VideosModule.html",[0,0.756,260,1.686]],["body/modules/VideosModule.html",[0,1.235,2,1.253,3,1.382,4,1.693,5,1.693,6,1.382,7,2.473,8,1.693,12,0.038,14,2.218,15,1.693,16,1.693,17,0.361,18,0.361,19,0.306,21,1.693,22,0.597,23,0.846,26,0.361,27,0.091,28,0.027,29,0.027,32,2.776,71,1.032,72,2.411,142,2.411,143,1.527,175,1.489,260,3.115,335,3.096,373,2.795,374,2.801,410,2.801,411,2.801,412,3.393,413,3.393,414,2.801,415,3.393]],["title/injectables/VideosService.html",[111,1.235,373,1.513]],["body/injectables/VideosService.html",[12,0.038,17,0.205,18,0.205,19,0.174,22,0.544,23,0.481,26,0.205,27,0.052,28,0.018,29,0.018,34,0.31,35,1.481,37,2.824,44,1.12,46,1.966,47,1.467,48,0.744,49,1.467,51,2.172,53,1.149,57,2.189,58,2.172,66,1.205,71,1.334,72,1.37,76,1.481,79,1.474,87,1.336,88,2.45,89,1.966,103,1.854,111,1.209,129,2.538,131,1.33,143,0.868,145,1.205,154,1.37,156,2.109,157,2.109,175,0.995,183,2.109,204,1.805,213,0.962,235,1.975,323,1.592,341,2.45,342,2.45,343,2.987,349,2.987,355,2.45,365,1.592,373,1.481,375,2.45,414,1.592,416,1.592,417,3.618,418,2.968,419,2.968,420,2.968,421,1.929,422,3.618,423,1.929,424,2.968,425,1.929,426,1.929,427,1.929,428,2.968,429,1.929,430,1.929,431,2.968,432,1.929,433,1.929,434,1.929,435,1.929,436,1.929,437,1.929,438,1.929,439,1.929,440,1.929,441,1.929,442,1.929,443,1.929,444,1.929,445,2.968,446,1.929,447,1.929,448,1.929,449,1.929,450,1.929,451,1.929,452,1.929,453,1.929,454,1.929]],["title/coverage.html",[455,3.403]],["body/coverage.html",[6,1.182,12,0.037,19,0.262,27,0.15,28,0.025,29,0.025,30,2.225,31,2.062,33,2.396,41,1.448,48,0.466,53,0.653,57,1.448,60,1.448,67,1.614,71,0.882,73,1.478,96,1.072,99,2.062,101,2.843,111,1.865,127,2.062,146,2.396,161,2.396,166,2.062,175,0.973,177,2.396,212,1.614,224,1.614,225,2.843,234,1.614,239,2.062,248,2.843,267,2.396,285,2.396,322,2.396,335,1.813,336,2.396,373,1.448,416,2.396,455,2.396,456,2.902,457,2.902,458,2.902,459,6.031,460,4.935,461,2.902,462,2.902,463,2.902,464,4.001,465,2.396,466,4.001,467,4.935,468,4.001,469,2.902,470,2.902,471,2.902,472,2.396,473,4.001,474,2.396,475,2.902]],["title/dependencies.html",[3,1.484,476,2.096]],["body/dependencies.html",[3,1.421,12,0.038,23,0.87,27,0.122,28,0.028,29,0.028,70,1.571,115,3.569,117,2.881,143,1.571,165,2.479,204,2.259,213,1.741,233,1.94,377,3.736,379,3.736,380,2.881,385,2.881,477,3.49,478,3.49,479,3.49,480,3.49,481,5.316,482,3.49,483,3.49,484,3.49,485,3.49,486,3.49,487,3.49,488,3.49,489,3.49,490,3.49,491,3.49,492,3.49,493,3.49,494,3.49,495,3.49,496,3.49,497,3.49,498,3.49,499,3.49,500,3.49]],["title/miscellaneous/functions.html",[501,1.586,502,3.007]],["body/miscellaneous/functions.html",[6,2.247,12,0.034,28,0.032,29,0.032,34,0.689,46,1.747,47,1.304,48,0.689,49,1.304,89,2.097,166,3.657,472,3.539,474,3.539,501,2.678,502,3.539,503,4.288,504,4.288,505,4.288,506,4.288]],["title/index.html",[34,0.487,507,2.503]],["body/index.html",[0,0.793,1,3.435,2,1.175,3,1.296,4,1.587,5,1.587,6,1.296,7,1.587,8,1.587,9,2.626,10,2.626,11,3.123,12,0.037,13,3.123,14,2.125,15,1.587,16,1.587,28,0.026,29,0.026,32,1.987,73,2.108,99,2.26,136,2.885,137,2.626,138,2.626,139,2.626,145,1.987,160,2.626,176,1.175,237,2.669,254,2.626,255,2.626,258,2.626,259,2.626,260,2.972,373,2.395,410,2.626,411,2.626,507,2.626,508,3.181,509,3.181,510,3.181,511,3.181]],["title/modules.html",[2,1.523]],["body/modules.html",[1,2.504,2,1.481,11,2.229,12,0.03,13,2.229,28,0.03,29,0.03,136,2.466,237,2.229,260,2.229,512,5.848,513,5.848,514,5.848,515,5.926,516,4.009,517,4.009]],["title/properties.html",[180,1.221,476,2.096]],["body/properties.html",[12,0.037,28,0.033,29,0.033,180,1.512,235,2.031,518,4.512,519,4.512,520,4.512,521,4.512,522,4.512]],["title/miscellaneous/variables.html",[501,1.586,523,3.007]],["body/miscellaneous/variables.html",[12,0.037,28,0.03,29,0.03,34,0.632,48,0.632,53,0.885,57,2.438,58,1.771,71,1.197,79,1.603,96,1.454,101,2.796,107,3.249,113,3.249,121,2.458,122,3.249,128,2.458,132,3.249,134,3.249,135,3.249,175,1.319,209,2.716,239,3.471,310,4.033,465,3.249,501,2.458,523,3.249,524,3.936,525,3.936]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"classes/Comment.html":{},"classes/CommentInput.html":{},"modules/DatabaseModule.html":{},"classes/LoginInput.html":{},"modules/ModulesModule.html":{},"modules/PagesModule.html":{},"classes/RegisterInput.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{},"classes/VideoInput.html":{},"controllers/VideosController.html":{},"modules/VideosModule.html":{},"injectables/VideosService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":497,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":467,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":461,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":463,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":471,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":460,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":468,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":469,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":462,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":470,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":464,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":160,"title":{"injectables/AuthService-1.html":{}},"body":{"index.html":{}}}],["1.0.0",{"_index":519,"title":{},"body":{"properties.html":{}}}],["1.0.1",{"_index":494,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":509,"title":{},"body":{"index.html":{}}}],["2.0.3",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["2.1.5",{"_index":500,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["25",{"_index":454,"title":{},"body":{"injectables/VideosService.html":{}}}],["3",{"_index":510,"title":{},"body":{"index.html":{}}}],["3.3.0",{"_index":493,"title":{},"body":{"dependencies.html":{}}}],["4.7.7",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["6.10.1",{"_index":478,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["6.31.1",{"_index":499,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":508,"title":{},"body":{"index.html":{}}}],["7.4.1",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":498,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":511,"title":{},"body":{"index.html":{}}}],["9.0.2",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["9.4.0",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["accessors",{"_index":287,"title":{},"body":{"classes/User.html":{}}}],["accesstoken",{"_index":286,"title":{},"body":{"classes/User.html":{}}}],["addcomment",{"_index":338,"title":{},"body":{"controllers/VideosController.html":{}}}],["addcomment(@body",{"_index":401,"title":{},"body":{"controllers/VideosController.html":{}}}],["addcomment(body",{"_index":345,"title":{},"body":{"controllers/VideosController.html":{}}}],["addmyvideo",{"_index":417,"title":{},"body":{"injectables/VideosService.html":{}}}],["addmyvideo(auth",{"_index":425,"title":{},"body":{"injectables/VideosService.html":{}}}],["addvideocomment",{"_index":418,"title":{},"body":{"injectables/VideosService.html":{}}}],["addvideocomment(id",{"_index":427,"title":{},"body":{"injectables/VideosService.html":{}}}],["allownull",{"_index":312,"title":{},"body":{"classes/User.html":{},"classes/Video.html":{}}}],["allownull(false",{"_index":314,"title":{},"body":{"classes/User.html":{},"classes/Video.html":{}}}],["allownull(undefined)@column(datatype.string",{"_index":298,"title":{},"body":{"classes/User.html":{},"classes/Video.html":{}}}],["apiheader",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{},"controllers/VideosController.html":{}}}],["apiheader({name",{"_index":54,"title":{},"body":{"controllers/AuthController.html":{},"controllers/VideosController.html":{}}}],["apiproperty",{"_index":231,"title":{},"body":{"classes/CommentInput.html":{},"classes/LoginInput.html":{},"classes/RegisterInput.html":{},"classes/VideoInput.html":{}}}],["apiproperty({description",{"_index":226,"title":{},"body":{"classes/CommentInput.html":{},"classes/LoginInput.html":{},"classes/RegisterInput.html":{},"classes/VideoInput.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["async",{"_index":37,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"controllers/VideosController.html":{},"injectables/VideosService.html":{}}}],["auth",{"_index":57,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"controllers/VideosController.html":{},"injectables/VideosService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth.avatar",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.id",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"injectables/VideosService.html":{}}}],["auth.input",{"_index":65,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService-1.html":{}}}],["auth.name",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.service",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth.status?.name",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.status_id",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.username",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth/auth.module",{"_index":257,"title":{},"body":{"modules/ModulesModule.html":{},"modules/PagesModule.html":{}}}],["auth/auth.service",{"_index":118,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authcontroller",{"_index":31,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["authguard",{"_index":67,"title":{"guards/AuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"controllers/VideosController.html":{},"coverage.html":{}}}],["authkey",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"controllers/VideosController.html":{}}}],["authkey'})@post('add')@fastifyfileinterceptor('video",{"_index":350,"title":{},"body":{"controllers/VideosController.html":{}}}],["authkey'})@post('comment')@useguards(authguard",{"_index":346,"title":{},"body":{"controllers/VideosController.html":{}}}],["authkey'})@useguards(authguard)@get('my",{"_index":356,"title":{},"body":{"controllers/VideosController.html":{}}}],["authkey'})@useguards(authguard)@get('profile",{"_index":55,"title":{},"body":{"controllers/AuthController.html":{}}}],["authmodule",{"_index":136,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ModulesModule.html":{},"modules/PagesModule.html":{},"index.html":{},"modules.html":{}}}],["author",{"_index":522,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":73,"title":{"injectables/AuthService.html":{},"injectables/AuthService-1.html":{}},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"coverage.html":{},"index.html":{}}}],["autoincrement",{"_index":205,"title":{},"body":{"classes/Comment.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{}}}],["autoincrement()@primarykey()@column(datatype.integer",{"_index":188,"title":{},"body":{"classes/Comment.html":{},"classes/User.html":{},"classes/Video.html":{}}}],["available",{"_index":517,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"classes/User.html":{}}}],["await",{"_index":129,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/VideosService.html":{}}}],["belongsto",{"_index":206,"title":{},"body":{"classes/Comment.html":{},"classes/User.html":{},"classes/Video.html":{}}}],["belongsto(undefined",{"_index":191,"title":{},"body":{"classes/Comment.html":{},"classes/User.html":{},"classes/Video.html":{}}}],["body",{"_index":50,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService-1.html":{},"controllers/VideosController.html":{}}}],["body.comment",{"_index":403,"title":{},"body":{"controllers/VideosController.html":{}}}],["body.desc",{"_index":409,"title":{},"body":{"controllers/VideosController.html":{}}}],["body.username",{"_index":172,"title":{},"body":{"injectables/AuthService-1.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ModulesModule.html":{},"modules/PagesModule.html":{},"modules/VideosModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["browse",{"_index":515,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":512,"title":{},"body":{"modules.html":{}}}],["canactivate",{"_index":102,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(context",{"_index":106,"title":{},"body":{"guards/AuthGuard.html":{}}}],["check",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{}}}],["check(token",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":27,"title":{"classes/Comment.html":{},"classes/CommentInput.html":{},"classes/LoginInput.html":{},"classes/RegisterInput.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{},"classes/VideoInput.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"classes/Comment.html":{},"classes/CommentInput.html":{},"modules/DatabaseModule.html":{},"classes/LoginInput.html":{},"modules/ModulesModule.html":{},"modules/PagesModule.html":{},"classes/RegisterInput.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{},"classes/VideoInput.html":{},"controllers/VideosController.html":{},"modules/VideosModule.html":{},"injectables/VideosService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":176,"title":{},"body":{"classes/Comment.html":{},"classes/CommentInput.html":{},"classes/LoginInput.html":{},"classes/RegisterInput.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{},"classes/VideoInput.html":{},"index.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_authmodule",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["cluster_authmodule_exports",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["cluster_authmodule_providers",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["cluster_modulesmodule",{"_index":254,"title":{},"body":{"modules/ModulesModule.html":{},"index.html":{}}}],["cluster_modulesmodule_imports",{"_index":255,"title":{},"body":{"modules/ModulesModule.html":{},"index.html":{}}}],["cluster_pagesmodule",{"_index":258,"title":{},"body":{"modules/PagesModule.html":{},"index.html":{}}}],["cluster_pagesmodule_imports",{"_index":259,"title":{},"body":{"modules/PagesModule.html":{},"index.html":{}}}],["cluster_videosmodule",{"_index":410,"title":{},"body":{"modules/VideosModule.html":{},"index.html":{}}}],["cluster_videosmodule_providers",{"_index":411,"title":{},"body":{"modules/VideosModule.html":{},"index.html":{}}}],["column",{"_index":207,"title":{},"body":{"classes/Comment.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{}}}],["column(datatype.date",{"_index":186,"title":{},"body":{"classes/Comment.html":{},"classes/User.html":{},"classes/Video.html":{}}}],["column(datatype.integer",{"_index":222,"title":{},"body":{"classes/Comment.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{}}}],["column(datatype.string",{"_index":277,"title":{},"body":{"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{}}}],["column(datatype.string(30",{"_index":284,"title":{},"body":{"classes/Status.html":{}}}],["column(datatype.string(60",{"_index":315,"title":{},"body":{"classes/User.html":{}}}],["column(datatype.text",{"_index":195,"title":{},"body":{"classes/Comment.html":{}}}],["column(undefined",{"_index":275,"title":{},"body":{"classes/Status.html":{}}}],["coment",{"_index":428,"title":{},"body":{"injectables/VideosService.html":{}}}],["comment",{"_index":175,"title":{"classes/Comment.html":{}},"body":{"classes/Comment.html":{},"classes/CommentInput.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/VideoInput.html":{},"modules/VideosModule.html":{},"injectables/VideosService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comment.model",{"_index":282,"title":{},"body":{"classes/Status.html":{},"classes/User.html":{}}}],["commentinput",{"_index":224,"title":{"classes/CommentInput.html":{}},"body":{"classes/CommentInput.html":{},"classes/VideoInput.html":{},"controllers/VideosController.html":{},"coverage.html":{}}}],["comments",{"_index":218,"title":{},"body":{"classes/Comment.html":{},"classes/Status.html":{},"classes/User.html":{}}}],["console.log(count",{"_index":450,"title":{},"body":{"injectables/VideosService.html":{}}}],["const",{"_index":121,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":103,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/VideosService.html":{}}}],["constructor(@injectmodel(user",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthService-1.html":{}}}],["constructor(auth",{"_index":104,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(modeluser",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthService-1.html":{}}}],["constructor(modelvideo",{"_index":421,"title":{},"body":{"injectables/VideosService.html":{}}}],["constructor(private",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"controllers/VideosController.html":{}}}],["context",{"_index":109,"title":{},"body":{"guards/AuthGuard.html":{}}}],["controller",{"_index":30,"title":{"controllers/AuthController.html":{},"controllers/VideosController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/VideosController.html":{},"coverage.html":{}}}],["controller('videos",{"_index":386,"title":{},"body":{"controllers/VideosController.html":{}}}],["controllers",{"_index":32,"title":{},"body":{"controllers/AuthController.html":{},"controllers/VideosController.html":{},"modules/VideosModule.html":{},"index.html":{}}}],["count",{"_index":365,"title":{},"body":{"controllers/VideosController.html":{},"injectables/VideosService.html":{}}}],["coverage",{"_index":455,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":339,"title":{},"body":{"controllers/VideosController.html":{}}}],["create(file",{"_index":348,"title":{},"body":{"controllers/VideosController.html":{}}}],["createdat",{"_index":221,"title":{},"body":{"classes/Comment.html":{},"classes/User.html":{},"classes/Video.html":{}}}],["createparamdecorator",{"_index":113,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["creationoptional",{"_index":185,"title":{},"body":{"classes/Comment.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{}}}],["ctx",{"_index":134,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":135,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["d/${id",{"_index":396,"title":{},"body":{"controllers/VideosController.html":{}}}],["data",{"_index":128,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"miscellaneous/variables.html":{}}}],["data.authkey",{"_index":169,"title":{},"body":{"injectables/AuthService-1.html":{}}}],["data.save",{"_index":171,"title":{},"body":{"injectables/AuthService-1.html":{}}}],["database",{"_index":243,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/ModulesModule.html":{}}}],["database/models/user.model",{"_index":119,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["databasemodule",{"_index":237,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/DatabaseModule.html":{},"modules/ModulesModule.html":{},"index.html":{},"modules.html":{}}}],["datatype",{"_index":208,"title":{},"body":{"classes/Comment.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{}}}],["date",{"_index":181,"title":{},"body":{"classes/Comment.html":{},"classes/User.html":{},"classes/Video.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ModulesModule.html":{},"modules/PagesModule.html":{},"modules/VideosModule.html":{},"index.html":{}}}],["decorators",{"_index":42,"title":{},"body":{"controllers/AuthController.html":{},"classes/Comment.html":{},"classes/CommentInput.html":{},"classes/LoginInput.html":{},"classes/RegisterInput.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{},"classes/VideoInput.html":{},"controllers/VideosController.html":{}}}],["default",{"_index":209,"title":{},"body":{"classes/Comment.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{},"miscellaneous/variables.html":{}}}],["default(1",{"_index":321,"title":{},"body":{"classes/User.html":{}}}],["default(1)@allownull(undefined)@foreignkey(undefined)@column(datatype.integer",{"_index":301,"title":{},"body":{"classes/User.html":{}}}],["default(7",{"_index":223,"title":{},"body":{"classes/Comment.html":{},"classes/Video.html":{}}}],["default(7)@foreignkey(undefined)@allownull(undefined)@column(datatype.integer",{"_index":329,"title":{},"body":{"classes/Video.html":{}}}],["default(7)@foreignkey(undefined)@column(datatype.integer",{"_index":193,"title":{},"body":{"classes/Comment.html":{}}}],["defined",{"_index":44,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"classes/Comment.html":{},"classes/CommentInput.html":{},"classes/LoginInput.html":{},"classes/RegisterInput.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{},"classes/VideoInput.html":{},"controllers/VideosController.html":{},"injectables/VideosService.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ModulesModule.html":{},"modules/PagesModule.html":{},"modules/VideosModule.html":{},"dependencies.html":{},"index.html":{}}}],["desc",{"_index":236,"title":{},"body":{"classes/CommentInput.html":{},"classes/VideoInput.html":{}}}],["description",{"_index":235,"title":{},"body":{"classes/CommentInput.html":{},"classes/LoginInput.html":{},"classes/RegisterInput.html":{},"classes/Video.html":{},"classes/VideoInput.html":{},"injectables/VideosService.html":{},"properties.html":{}}}],["dialect",{"_index":241,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["diskstorage",{"_index":376,"title":{},"body":{"controllers/VideosController.html":{}}}],["documentation",{"_index":456,"title":{},"body":{"coverage.html":{}}}],["email",{"_index":253,"title":{},"body":{"classes/LoginInput.html":{},"classes/RegisterInput.html":{},"classes/User.html":{}}}],["executioncontext",{"_index":107,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"classes/Comment.html":{},"classes/CommentInput.html":{},"modules/DatabaseModule.html":{},"classes/LoginInput.html":{},"modules/ModulesModule.html":{},"modules/PagesModule.html":{},"classes/RegisterInput.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{},"classes/VideoInput.html":{},"controllers/VideosController.html":{},"modules/VideosModule.html":{},"injectables/VideosService.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ModulesModule.html":{},"modules/PagesModule.html":{},"modules/VideosModule.html":{},"index.html":{}}}],["express",{"_index":380,"title":{},"body":{"controllers/VideosController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":349,"title":{},"body":{"controllers/VideosController.html":{},"injectables/VideosService.html":{}}}],["extends",{"_index":178,"title":{},"body":{"classes/Comment.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{}}}],["extname",{"_index":382,"title":{},"body":{"controllers/VideosController.html":{}}}],["false",{"_index":220,"title":{},"body":{"classes/Comment.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{}}}],["fastify",{"_index":115,"title":{},"body":{"guards/AuthGuard.html":{},"controllers/VideosController.html":{},"dependencies.html":{}}}],["fastify/static",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["fastify/view",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["fastifyfileinterceptor",{"_index":384,"title":{},"body":{"controllers/VideosController.html":{}}}],["fastifyfileinterceptor('video",{"_index":407,"title":{},"body":{"controllers/VideosController.html":{}}}],["fastifyrequest",{"_index":114,"title":{},"body":{"guards/AuthGuard.html":{}}}],["file",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"classes/Comment.html":{},"classes/CommentInput.html":{},"modules/DatabaseModule.html":{},"classes/LoginInput.html":{},"modules/ModulesModule.html":{},"modules/PagesModule.html":{},"classes/RegisterInput.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{},"classes/VideoInput.html":{},"controllers/VideosController.html":{},"modules/VideosModule.html":{},"injectables/VideosService.html":{},"coverage.html":{}}}],["fileinterceptor",{"_index":378,"title":{},"body":{"controllers/VideosController.html":{}}}],["foreignkey",{"_index":210,"title":{},"body":{"classes/Comment.html":{},"classes/User.html":{},"classes/Video.html":{}}}],["foreignkey(undefined)@allownull(undefined)@column(datatype.integer",{"_index":332,"title":{},"body":{"classes/Video.html":{}}}],["foreignkey(undefined)@column(datatype.integer",{"_index":198,"title":{},"body":{"classes/Comment.html":{}}}],["fs",{"_index":375,"title":{},"body":{"controllers/VideosController.html":{},"injectables/VideosService.html":{}}}],["fs/promises",{"_index":441,"title":{},"body":{"injectables/VideosService.html":{}}}],["fsp",{"_index":440,"title":{},"body":{"injectables/VideosService.html":{}}}],["fsp.writefile(`clips/${video.originalname",{"_index":446,"title":{},"body":{"injectables/VideosService.html":{}}}],["function",{"_index":473,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":502,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('all",{"_index":360,"title":{},"body":{"controllers/VideosController.html":{}}}],["get('comment/:id",{"_index":353,"title":{},"body":{"controllers/VideosController.html":{}}}],["get('fc",{"_index":398,"title":{},"body":{"controllers/VideosController.html":{}}}],["get('my",{"_index":387,"title":{},"body":{"controllers/VideosController.html":{}}}],["get('profile",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('random/:count",{"_index":363,"title":{},"body":{"controllers/VideosController.html":{}}}],["get('view",{"_index":397,"title":{},"body":{"controllers/VideosController.html":{}}}],["get('view/')@get('fc",{"_index":358,"title":{},"body":{"controllers/VideosController.html":{}}}],["get('view/:id",{"_index":393,"title":{},"body":{"controllers/VideosController.html":{}}}],["getcomment",{"_index":340,"title":{},"body":{"controllers/VideosController.html":{}}}],["getcomment(@param('id",{"_index":404,"title":{},"body":{"controllers/VideosController.html":{}}}],["getcomment(id",{"_index":352,"title":{},"body":{"controllers/VideosController.html":{}}}],["getmyvideos",{"_index":341,"title":{},"body":{"controllers/VideosController.html":{},"injectables/VideosService.html":{}}}],["getmyvideos(@auth",{"_index":388,"title":{},"body":{"controllers/VideosController.html":{}}}],["getmyvideos(auth",{"_index":355,"title":{},"body":{"controllers/VideosController.html":{},"injectables/VideosService.html":{}}}],["getpassword",{"_index":306,"title":{},"body":{"classes/User.html":{}}}],["getrandomvideos",{"_index":419,"title":{},"body":{"injectables/VideosService.html":{}}}],["getrandomvideos(count",{"_index":431,"title":{},"body":{"injectables/VideosService.html":{}}}],["getrequest",{"_index":124,"title":{},"body":{"guards/AuthGuard.html":{}}}],["getvideo",{"_index":342,"title":{},"body":{"controllers/VideosController.html":{},"injectables/VideosService.html":{}}}],["getvideo(id",{"_index":433,"title":{},"body":{"injectables/VideosService.html":{}}}],["getvideocomments",{"_index":420,"title":{},"body":{"injectables/VideosService.html":{}}}],["getvideocomments(id",{"_index":436,"title":{},"body":{"injectables/VideosService.html":{}}}],["getvideohtml(@param('id",{"_index":395,"title":{},"body":{"controllers/VideosController.html":{}}}],["getvideos",{"_index":343,"title":{},"body":{"controllers/VideosController.html":{},"injectables/VideosService.html":{}}}],["getvideosrandom",{"_index":344,"title":{},"body":{"controllers/VideosController.html":{}}}],["getvideosrandom(@param('count",{"_index":390,"title":{},"body":{"controllers/VideosController.html":{}}}],["getvideosrandom(count",{"_index":362,"title":{},"body":{"controllers/VideosController.html":{}}}],["global",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{}}}],["graph",{"_index":516,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":99,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["guards",{"_index":100,"title":{},"body":{"guards/AuthGuard.html":{}}}],["handlebars",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["hasmany",{"_index":281,"title":{},"body":{"classes/Status.html":{},"classes/User.html":{}}}],["hasmany(undefined",{"_index":271,"title":{},"body":{"classes/Status.html":{},"classes/User.html":{}}}],["host",{"_index":245,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["id",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"classes/Comment.html":{},"classes/CommentInput.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{},"classes/VideoInput.html":{},"controllers/VideosController.html":{},"injectables/VideosService.html":{}}}],["identifier",{"_index":457,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":120,"title":{},"body":{"guards/AuthGuard.html":{}}}],["import",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"classes/Comment.html":{},"classes/CommentInput.html":{},"modules/DatabaseModule.html":{},"classes/LoginInput.html":{},"modules/ModulesModule.html":{},"modules/PagesModule.html":{},"classes/RegisterInput.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{},"classes/VideoInput.html":{},"controllers/VideosController.html":{},"modules/VideosModule.html":{},"injectables/VideosService.html":{}}}],["imports",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ModulesModule.html":{},"modules/PagesModule.html":{},"modules/VideosModule.html":{}}}],["include",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["index",{"_index":34,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"classes/Comment.html":{},"classes/CommentInput.html":{},"classes/LoginInput.html":{},"classes/RegisterInput.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{},"classes/VideoInput.html":{},"controllers/VideosController.html":{},"injectables/VideosService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inferattributes",{"_index":202,"title":{},"body":{"classes/Comment.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{}}}],["infercreationattributes",{"_index":203,"title":{},"body":{"classes/Comment.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{}}}],["info",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"classes/Comment.html":{},"classes/CommentInput.html":{},"modules/DatabaseModule.html":{},"classes/LoginInput.html":{},"modules/ModulesModule.html":{},"modules/PagesModule.html":{},"classes/RegisterInput.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{},"classes/VideoInput.html":{},"controllers/VideosController.html":{},"modules/VideosModule.html":{},"injectables/VideosService.html":{}}}],["injectable",{"_index":111,"title":{"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/VideosService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/VideosService.html":{},"coverage.html":{}}}],["injectables",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/VideosService.html":{},"index.html":{}}}],["injectmodel",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/VideosService.html":{}}}],["injectmodel(comment",{"_index":444,"title":{},"body":{"injectables/VideosService.html":{}}}],["injectmodel(video",{"_index":443,"title":{},"body":{"injectables/VideosService.html":{}}}],["isc",{"_index":521,"title":{},"body":{"properties.html":{}}}],["isnotempty",{"_index":252,"title":{},"body":{"classes/LoginInput.html":{},"classes/RegisterInput.html":{}}}],["isnull",{"_index":442,"title":{},"body":{"injectables/VideosService.html":{}}}],["isnumber",{"_index":229,"title":{},"body":{"classes/CommentInput.html":{},"classes/VideoInput.html":{}}}],["isobject",{"_index":232,"title":{},"body":{"classes/CommentInput.html":{},"classes/VideoInput.html":{}}}],["isstring",{"_index":227,"title":{},"body":{"classes/CommentInput.html":{},"classes/LoginInput.html":{},"classes/RegisterInput.html":{},"classes/VideoInput.html":{}}}],["isstring()@isnotempty",{"_index":249,"title":{},"body":{"classes/LoginInput.html":{},"classes/RegisterInput.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ModulesModule.html":{},"modules/PagesModule.html":{},"modules/VideosModule.html":{},"index.html":{}}}],["length",{"_index":506,"title":{},"body":{"miscellaneous/functions.html":{}}}],["license",{"_index":520,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":453,"title":{},"body":{"injectables/VideosService.html":{}}}],["link",{"_index":323,"title":{},"body":{"classes/Video.html":{},"injectables/VideosService.html":{}}}],["localhost",{"_index":246,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["login",{"_index":36,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService-1.html":{}}}],["login(@body",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(body",{"_index":40,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService-1.html":{}}}],["logininput",{"_index":41,"title":{"classes/LoginInput.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService-1.html":{},"classes/LoginInput.html":{},"classes/RegisterInput.html":{},"coverage.html":{}}}],["makerandom",{"_index":166,"title":{},"body":{"injectables/AuthService-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["makerandom(32",{"_index":170,"title":{},"body":{"injectables/AuthService-1.html":{}}}],["makerandom(length",{"_index":505,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matching",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"classes/Comment.html":{},"classes/CommentInput.html":{},"modules/DatabaseModule.html":{},"classes/LoginInput.html":{},"modules/ModulesModule.html":{},"modules/PagesModule.html":{},"classes/RegisterInput.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{},"classes/VideoInput.html":{},"controllers/VideosController.html":{},"modules/VideosModule.html":{},"injectables/VideosService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["md5",{"_index":165,"title":{},"body":{"injectables/AuthService-1.html":{},"classes/User.html":{},"dependencies.html":{}}}],["md5(body.password",{"_index":174,"title":{},"body":{"injectables/AuthService-1.html":{}}}],["md5(value",{"_index":320,"title":{},"body":{"classes/User.html":{}}}],["metadata",{"_index":496,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":35,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"controllers/VideosController.html":{},"injectables/VideosService.html":{}}}],["miscellaneous",{"_index":501,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":179,"title":{},"body":{"classes/Comment.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{}}}],["modelcomment",{"_index":422,"title":{},"body":{"injectables/VideosService.html":{}}}],["models",{"_index":239,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modeluser",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthService-1.html":{}}}],["modelvideo",{"_index":424,"title":{},"body":{"injectables/VideosService.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ModulesModule.html":{},"modules/PagesModule.html":{},"modules/VideosModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ModulesModule.html":{},"modules/PagesModule.html":{},"modules/VideosModule.html":{},"index.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ModulesModule.html":{},"modules/PagesModule.html":{},"modules/VideosModule.html":{},"index.html":{},"modules.html":{}}}],["modules/modules.module",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["modulesmodule",{"_index":11,"title":{"modules/ModulesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ModulesModule.html":{},"index.html":{},"modules.html":{}}}],["multer",{"_index":377,"title":{},"body":{"controllers/VideosController.html":{},"dependencies.html":{}}}],["mysql",{"_index":242,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["mysql2",{"_index":492,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":47,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"classes/LoginInput.html":{},"classes/RegisterInput.html":{},"classes/Status.html":{},"classes/User.html":{},"controllers/VideosController.html":{},"injectables/VideosService.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":385,"title":{},"body":{"controllers/VideosController.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"modules/DatabaseModule.html":{},"modules/ModulesModule.html":{},"modules/PagesModule.html":{},"controllers/VideosController.html":{},"modules/VideosModule.html":{},"injectables/VideosService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":379,"title":{},"body":{"controllers/VideosController.html":{},"dependencies.html":{}}}],["nestjs/sequelize",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"modules/DatabaseModule.html":{},"modules/VideosModule.html":{},"injectables/VideosService.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{},"classes/CommentInput.html":{},"classes/LoginInput.html":{},"classes/RegisterInput.html":{},"classes/VideoInput.html":{},"controllers/VideosController.html":{},"dependencies.html":{}}}],["new",{"_index":127,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService-1.html":{},"coverage.html":{}}}],["nonattribute",{"_index":190,"title":{},"body":{"classes/Comment.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{}}}],["null",{"_index":288,"title":{},"body":{"classes/User.html":{},"classes/Video.html":{}}}],["number",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"classes/Comment.html":{},"classes/CommentInput.html":{},"classes/Video.html":{},"classes/VideoInput.html":{},"controllers/VideosController.html":{},"injectables/VideosService.html":{},"miscellaneous/functions.html":{}}}],["observable",{"_index":116,"title":{},"body":{"guards/AuthGuard.html":{}}}],["open_imagination",{"_index":244,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["optional",{"_index":49,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"classes/Comment.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{},"controllers/VideosController.html":{},"injectables/VideosService.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":451,"title":{},"body":{"injectables/VideosService.html":{}}}],["out",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ModulesModule.html":{},"modules/PagesModule.html":{},"modules/VideosModule.html":{},"index.html":{}}}],["overview",{"_index":507,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":476,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pages/pages.module",{"_index":24,"title":{},"body":{"modules/AppModule.html":{}}}],["pagesmodule",{"_index":13,"title":{"modules/PagesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PagesModule.html":{},"index.html":{},"modules.html":{}}}],["param",{"_index":366,"title":{},"body":{"controllers/VideosController.html":{}}}],["parameters",{"_index":46,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"classes/User.html":{},"controllers/VideosController.html":{},"injectables/VideosService.html":{},"miscellaneous/functions.html":{}}}],["parseintpipe",{"_index":367,"title":{},"body":{"controllers/VideosController.html":{}}}],["password",{"_index":173,"title":{},"body":{"injectables/AuthService-1.html":{},"classes/LoginInput.html":{},"classes/RegisterInput.html":{},"classes/User.html":{}}}],["password(value",{"_index":318,"title":{},"body":{"classes/User.html":{}}}],["path",{"_index":383,"title":{},"body":{"controllers/VideosController.html":{}}}],["post",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{},"controllers/VideosController.html":{}}}],["post('add",{"_index":406,"title":{},"body":{"controllers/VideosController.html":{}}}],["post('comment",{"_index":400,"title":{},"body":{"controllers/VideosController.html":{}}}],["post('login",{"_index":43,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":61,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":337,"title":{},"body":{"controllers/VideosController.html":{}}}],["primarykey",{"_index":211,"title":{},"body":{"classes/Comment.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{}}}],["primarykey()@autoincrement()@column(datatype.integer",{"_index":273,"title":{},"body":{"classes/Status.html":{}}}],["private",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/VideosService.html":{}}}],["profile",{"_index":38,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(@auth",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(auth",{"_index":52,"title":{},"body":{"controllers/AuthController.html":{}}}],["promise",{"_index":110,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properties",{"_index":180,"title":{"properties.html":{}},"body":{"classes/Comment.html":{},"classes/CommentInput.html":{},"classes/LoginInput.html":{},"classes/RegisterInput.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{},"classes/VideoInput.html":{},"properties.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ModulesModule.html":{},"modules/PagesModule.html":{},"modules/VideosModule.html":{},"index.html":{}}}],["readonly",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"controllers/VideosController.html":{},"injectables/VideosService.html":{}}}],["reflect",{"_index":495,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":39,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService-1.html":{}}}],["register(@body",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(body",{"_index":59,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService-1.html":{}}}],["registerinput",{"_index":60,"title":{"classes/RegisterInput.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService-1.html":{},"classes/LoginInput.html":{},"classes/RegisterInput.html":{},"coverage.html":{}}}],["render",{"_index":368,"title":{},"body":{"controllers/VideosController.html":{}}}],["render('render.hbs",{"_index":394,"title":{},"body":{"controllers/VideosController.html":{}}}],["request",{"_index":122,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["request.headers",{"_index":125,"title":{},"body":{"guards/AuthGuard.html":{}}}],["request.user",{"_index":132,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["res",{"_index":369,"title":{},"body":{"controllers/VideosController.html":{}}}],["reset",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ModulesModule.html":{},"modules/PagesModule.html":{},"modules/VideosModule.html":{},"index.html":{}}}],["results",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"classes/Comment.html":{},"classes/CommentInput.html":{},"modules/DatabaseModule.html":{},"classes/LoginInput.html":{},"modules/ModulesModule.html":{},"modules/PagesModule.html":{},"classes/RegisterInput.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{},"classes/VideoInput.html":{},"controllers/VideosController.html":{},"modules/VideosModule.html":{},"injectables/VideosService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"classes/User.html":{},"controllers/VideosController.html":{},"injectables/VideosService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":51,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"classes/User.html":{},"controllers/VideosController.html":{},"injectables/VideosService.html":{}}}],["root",{"_index":247,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["rxjs",{"_index":117,"title":{},"body":{"guards/AuthGuard.html":{},"dependencies.html":{}}}],["sequelize",{"_index":204,"title":{},"body":{"classes/Comment.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{},"injectables/VideosService.html":{},"dependencies.html":{}}}],["sequelize.literal('rand",{"_index":452,"title":{},"body":{"injectables/VideosService.html":{}}}],["sequelizemodule",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/VideosModule.html":{}}}],["sequelizemodule.forfeature([user",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{}}}],["sequelizemodule.forfeature([video",{"_index":415,"title":{},"body":{"modules/VideosModule.html":{}}}],["sequelizemodule.forroot",{"_index":240,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["service",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"controllers/VideosController.html":{}}}],["set",{"_index":317,"title":{},"body":{"classes/User.html":{}}}],["setpassword(value",{"_index":308,"title":{},"body":{"classes/User.html":{}}}],["source",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"classes/Comment.html":{},"classes/CommentInput.html":{},"modules/DatabaseModule.html":{},"classes/LoginInput.html":{},"modules/ModulesModule.html":{},"modules/PagesModule.html":{},"classes/RegisterInput.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{},"classes/VideoInput.html":{},"controllers/VideosController.html":{},"modules/VideosModule.html":{},"injectables/VideosService.html":{}}}],["src/.../authguard.ts",{"_index":524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":503,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../makerandom.ts",{"_index":504,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":20,"title":{},"body":{"modules/AppModule.html":{}}}],["src/main.ts",{"_index":472,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/modules/auth/auth.service.ts:6",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:9",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/database/index.ts",{"_index":238,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/modules/database/models/comment.model",{"_index":414,"title":{},"body":{"modules/VideosModule.html":{},"injectables/VideosService.html":{}}}],["src/modules/database/models/comment.model.ts",{"_index":177,"title":{},"body":{"classes/Comment.html":{},"coverage.html":{}}}],["src/modules/database/models/comment.model.ts:30",{"_index":189,"title":{},"body":{"classes/Comment.html":{}}}],["src/modules/database/models/comment.model.ts:33",{"_index":196,"title":{},"body":{"classes/Comment.html":{}}}],["src/modules/database/models/comment.model.ts:37",{"_index":201,"title":{},"body":{"classes/Comment.html":{}}}],["src/modules/database/models/comment.model.ts:39",{"_index":200,"title":{},"body":{"classes/Comment.html":{}}}],["src/modules/database/models/comment.model.ts:43",{"_index":199,"title":{},"body":{"classes/Comment.html":{}}}],["src/modules/database/models/comment.model.ts:45",{"_index":197,"title":{},"body":{"classes/Comment.html":{}}}],["src/modules/database/models/comment.model.ts:50",{"_index":194,"title":{},"body":{"classes/Comment.html":{}}}],["src/modules/database/models/comment.model.ts:52",{"_index":192,"title":{},"body":{"classes/Comment.html":{}}}],["src/modules/database/models/comment.model.ts:55",{"_index":187,"title":{},"body":{"classes/Comment.html":{}}}],["src/modules/database/models/index.ts",{"_index":465,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/database/models/status.model.ts",{"_index":267,"title":{},"body":{"classes/Status.html":{},"coverage.html":{}}}],["src/modules/database/models/status.model.ts:28",{"_index":274,"title":{},"body":{"classes/Status.html":{}}}],["src/modules/database/models/status.model.ts:30",{"_index":276,"title":{},"body":{"classes/Status.html":{}}}],["src/modules/database/models/status.model.ts:32",{"_index":278,"title":{},"body":{"classes/Status.html":{}}}],["src/modules/database/models/status.model.ts:34",{"_index":279,"title":{},"body":{"classes/Status.html":{}}}],["src/modules/database/models/status.model.ts:37",{"_index":280,"title":{},"body":{"classes/Status.html":{}}}],["src/modules/database/models/status.model.ts:40",{"_index":272,"title":{},"body":{"classes/Status.html":{}}}],["src/modules/database/models/user.model",{"_index":66,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService-1.html":{},"controllers/VideosController.html":{},"injectables/VideosService.html":{}}}],["src/modules/database/models/user.model.ts",{"_index":285,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/modules/database/models/user.model.ts:33",{"_index":297,"title":{},"body":{"classes/User.html":{}}}],["src/modules/database/models/user.model.ts:38",{"_index":304,"title":{},"body":{"classes/User.html":{}}}],["src/modules/database/models/user.model.ts:42",{"_index":307,"title":{},"body":{"classes/User.html":{}}}],["src/modules/database/models/user.model.ts:45",{"_index":309,"title":{},"body":{"classes/User.html":{}}}],["src/modules/database/models/user.model.ts:52",{"_index":296,"title":{},"body":{"classes/User.html":{}}}],["src/modules/database/models/user.model.ts:56",{"_index":299,"title":{},"body":{"classes/User.html":{}}}],["src/modules/database/models/user.model.ts:59",{"_index":292,"title":{},"body":{"classes/User.html":{}}}],["src/modules/database/models/user.model.ts:65",{"_index":302,"title":{},"body":{"classes/User.html":{}}}],["src/modules/database/models/user.model.ts:68",{"_index":300,"title":{},"body":{"classes/User.html":{}}}],["src/modules/database/models/user.model.ts:71",{"_index":294,"title":{},"body":{"classes/User.html":{}}}],["src/modules/database/models/user.model.ts:74",{"_index":291,"title":{},"body":{"classes/User.html":{}}}],["src/modules/database/models/user.model.ts:78",{"_index":290,"title":{},"body":{"classes/User.html":{}}}],["src/modules/database/models/user.model.ts:81",{"_index":305,"title":{},"body":{"classes/User.html":{}}}],["src/modules/database/models/user.model.ts:84",{"_index":293,"title":{},"body":{"classes/User.html":{}}}],["src/modules/database/models/video.model",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"modules/VideosModule.html":{},"injectables/VideosService.html":{}}}],["src/modules/database/models/video.model.ts",{"_index":322,"title":{},"body":{"classes/Video.html":{},"coverage.html":{}}}],["src/modules/database/models/video.model.ts:30",{"_index":326,"title":{},"body":{"classes/Video.html":{}}}],["src/modules/database/models/video.model.ts:34",{"_index":327,"title":{},"body":{"classes/Video.html":{}}}],["src/modules/database/models/video.model.ts:37",{"_index":325,"title":{},"body":{"classes/Video.html":{}}}],["src/modules/database/models/video.model.ts:42",{"_index":333,"title":{},"body":{"classes/Video.html":{}}}],["src/modules/database/models/video.model.ts:44",{"_index":331,"title":{},"body":{"classes/Video.html":{}}}],["src/modules/database/models/video.model.ts:50",{"_index":330,"title":{},"body":{"classes/Video.html":{}}}],["src/modules/database/models/video.model.ts:52",{"_index":328,"title":{},"body":{"classes/Video.html":{}}}],["src/modules/database/models/video.model.ts:55",{"_index":324,"title":{},"body":{"classes/Video.html":{}}}],["src/modules/guards/authguard",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{},"controllers/VideosController.html":{}}}],["src/modules/guards/authguard.ts",{"_index":101,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/guards/authguard.ts:13",{"_index":105,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/modules/guards/authguard.ts:15",{"_index":108,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/modules/modules.module.ts",{"_index":256,"title":{},"body":{"modules/ModulesModule.html":{}}}],["src/pages/auth/auth.controller.ts",{"_index":33,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/pages/auth/auth.controller.ts:13",{"_index":45,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/pages/auth/auth.controller.ts:17",{"_index":62,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/pages/auth/auth.controller.ts:23",{"_index":56,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/pages/auth/auth.input.ts",{"_index":248,"title":{},"body":{"classes/LoginInput.html":{},"classes/RegisterInput.html":{},"coverage.html":{}}}],["src/pages/auth/auth.input.ts:12",{"_index":250,"title":{},"body":{"classes/LoginInput.html":{}}}],["src/pages/auth/auth.input.ts:18",{"_index":266,"title":{},"body":{"classes/RegisterInput.html":{}}}],["src/pages/auth/auth.input.ts:22",{"_index":265,"title":{},"body":{"classes/RegisterInput.html":{}}}],["src/pages/auth/auth.input.ts:26",{"_index":263,"title":{},"body":{"classes/RegisterInput.html":{}}}],["src/pages/auth/auth.input.ts:30",{"_index":264,"title":{},"body":{"classes/RegisterInput.html":{}}}],["src/pages/auth/auth.input.ts:8",{"_index":251,"title":{},"body":{"classes/LoginInput.html":{}}}],["src/pages/auth/auth.service.ts",{"_index":161,"title":{},"body":{"injectables/AuthService-1.html":{},"coverage.html":{}}}],["src/pages/auth/auth.service.ts:11",{"_index":164,"title":{},"body":{"injectables/AuthService-1.html":{}}}],["src/pages/auth/auth.service.ts:17",{"_index":163,"title":{},"body":{"injectables/AuthService-1.html":{}}}],["src/pages/auth/auth.service.ts:9",{"_index":162,"title":{},"body":{"injectables/AuthService-1.html":{}}}],["src/pages/pages.module.ts",{"_index":261,"title":{},"body":{"modules/PagesModule.html":{}}}],["src/pages/videos/videos.controller.ts",{"_index":336,"title":{},"body":{"controllers/VideosController.html":{},"coverage.html":{}}}],["src/pages/videos/videos.controller.ts:34",{"_index":357,"title":{},"body":{"controllers/VideosController.html":{}}}],["src/pages/videos/videos.controller.ts:39",{"_index":364,"title":{},"body":{"controllers/VideosController.html":{}}}],["src/pages/videos/videos.controller.ts:44",{"_index":361,"title":{},"body":{"controllers/VideosController.html":{}}}],["src/pages/videos/videos.controller.ts:56",{"_index":359,"title":{},"body":{"controllers/VideosController.html":{}}}],["src/pages/videos/videos.controller.ts:62",{"_index":347,"title":{},"body":{"controllers/VideosController.html":{}}}],["src/pages/videos/videos.controller.ts:66",{"_index":354,"title":{},"body":{"controllers/VideosController.html":{}}}],["src/pages/videos/videos.controller.ts:74",{"_index":351,"title":{},"body":{"controllers/VideosController.html":{}}}],["src/pages/videos/videos.input.ts",{"_index":225,"title":{},"body":{"classes/CommentInput.html":{},"classes/VideoInput.html":{},"coverage.html":{}}}],["src/pages/videos/videos.input.ts:12",{"_index":230,"title":{},"body":{"classes/CommentInput.html":{}}}],["src/pages/videos/videos.input.ts:15",{"_index":228,"title":{},"body":{"classes/CommentInput.html":{}}}],["src/pages/videos/videos.input.ts:7",{"_index":334,"title":{},"body":{"classes/VideoInput.html":{}}}],["src/pages/videos/videos.module.ts",{"_index":412,"title":{},"body":{"modules/VideosModule.html":{}}}],["src/pages/videos/videos.service.ts",{"_index":416,"title":{},"body":{"injectables/VideosService.html":{},"coverage.html":{}}}],["src/pages/videos/videos.service.ts:11",{"_index":423,"title":{},"body":{"injectables/VideosService.html":{}}}],["src/pages/videos/videos.service.ts:17",{"_index":430,"title":{},"body":{"injectables/VideosService.html":{}}}],["src/pages/videos/videos.service.ts:23",{"_index":426,"title":{},"body":{"injectables/VideosService.html":{}}}],["src/pages/videos/videos.service.ts:36",{"_index":432,"title":{},"body":{"injectables/VideosService.html":{}}}],["src/pages/videos/videos.service.ts:44",{"_index":434,"title":{},"body":{"injectables/VideosService.html":{}}}],["src/pages/videos/videos.service.ts:51",{"_index":429,"title":{},"body":{"injectables/VideosService.html":{}}}],["src/pages/videos/videos.service.ts:58",{"_index":437,"title":{},"body":{"injectables/VideosService.html":{}}}],["src/pages/videos/videos.service.ts:65",{"_index":438,"title":{},"body":{"injectables/VideosService.html":{}}}],["src/utils/makerandom",{"_index":167,"title":{},"body":{"injectables/AuthService-1.html":{}}}],["src/utils/makerandom.ts",{"_index":474,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["statements",{"_index":458,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":96,"title":{"classes/Status.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Comment.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["status.model",{"_index":216,"title":{},"body":{"classes/Comment.html":{},"classes/User.html":{},"classes/Video.html":{}}}],["status_id",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"classes/Comment.html":{},"classes/User.html":{},"classes/Video.html":{}}}],["streamablefile",{"_index":439,"title":{},"body":{"injectables/VideosService.html":{}}}],["string",{"_index":131,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Comment.html":{},"classes/CommentInput.html":{},"classes/LoginInput.html":{},"classes/RegisterInput.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{},"classes/VideoInput.html":{},"controllers/VideosController.html":{},"injectables/VideosService.html":{}}}],["support",{"_index":513,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":514,"title":{},"body":{"modules.html":{}}}],["switchtohttp",{"_index":123,"title":{},"body":{"guards/AuthGuard.html":{}}}],["table",{"_index":212,"title":{},"body":{"classes/Comment.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{},"coverage.html":{}}}],["tablename",{"_index":217,"title":{},"body":{"classes/Comment.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":475,"title":{},"body":{"coverage.html":{}}}],["tabletype",{"_index":268,"title":{},"body":{"classes/Status.html":{}}}],["text",{"_index":182,"title":{},"body":{"classes/Comment.html":{}}}],["this.auth.check(authkey",{"_index":130,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.getdatavalue('password",{"_index":316,"title":{},"body":{"classes/User.html":{}}}],["this.modeluser.create(body",{"_index":168,"title":{},"body":{"injectables/AuthService-1.html":{}}}],["this.modeluser.findone",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthService-1.html":{}}}],["this.modelvideo.create",{"_index":448,"title":{},"body":{"injectables/VideosService.html":{}}}],["this.modelvideo.findall",{"_index":445,"title":{},"body":{"injectables/VideosService.html":{}}}],["this.service.addmyvideo(auth",{"_index":408,"title":{},"body":{"controllers/VideosController.html":{}}}],["this.service.addvideocomment(body.id",{"_index":402,"title":{},"body":{"controllers/VideosController.html":{}}}],["this.service.getmyvideos(auth",{"_index":389,"title":{},"body":{"controllers/VideosController.html":{}}}],["this.service.getrandomvideos(count",{"_index":391,"title":{},"body":{"controllers/VideosController.html":{}}}],["this.service.getvideo",{"_index":399,"title":{},"body":{"controllers/VideosController.html":{}}}],["this.service.getvideocomments(id",{"_index":405,"title":{},"body":{"controllers/VideosController.html":{}}}],["this.service.getvideos",{"_index":392,"title":{},"body":{"controllers/VideosController.html":{}}}],["this.service.login(body",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.service.register(body",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.setdatavalue('password",{"_index":319,"title":{},"body":{"classes/User.html":{}}}],["throw",{"_index":126,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService-1.html":{}}}],["timestamps",{"_index":283,"title":{},"body":{"classes/Status.html":{}}}],["token",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{}}}],["transformer",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":133,"title":{},"body":{"guards/AuthGuard.html":{}}}],["type",{"_index":48,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"classes/Comment.html":{},"classes/CommentInput.html":{},"classes/LoginInput.html":{},"classes/RegisterInput.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{},"classes/VideoInput.html":{},"controllers/VideosController.html":{},"injectables/VideosService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/VideosService.html":{}}}],["typescript",{"_index":213,"title":{},"body":{"classes/Comment.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{},"injectables/VideosService.html":{},"dependencies.html":{}}}],["unauthorizedexception",{"_index":112,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService-1.html":{}}}],["unique",{"_index":313,"title":{},"body":{"classes/User.html":{}}}],["unique()@allownull(undefined)@column(datatype.string",{"_index":295,"title":{},"body":{"classes/User.html":{}}}],["unique()@allownull(undefined)@column(undefined",{"_index":303,"title":{},"body":{"classes/User.html":{}}}],["unique()@column(datatype.string",{"_index":289,"title":{},"body":{"classes/User.html":{}}}],["unknown",{"_index":58,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"controllers/VideosController.html":{},"injectables/VideosService.html":{},"miscellaneous/variables.html":{}}}],["updatedat",{"_index":219,"title":{},"body":{"classes/Comment.html":{},"classes/User.html":{},"classes/Video.html":{}}}],["uploadedfile",{"_index":370,"title":{},"body":{"controllers/VideosController.html":{}}}],["uploadedfiles",{"_index":371,"title":{},"body":{"controllers/VideosController.html":{}}}],["useguards",{"_index":64,"title":{},"body":{"controllers/AuthController.html":{},"controllers/VideosController.html":{}}}],["useguards(authguard",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"controllers/VideosController.html":{}}}],["useinterceptors",{"_index":372,"title":{},"body":{"controllers/VideosController.html":{}}}],["user",{"_index":53,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"classes/Comment.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{},"controllers/VideosController.html":{},"injectables/VideosService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.model",{"_index":215,"title":{},"body":{"classes/Comment.html":{},"classes/Status.html":{},"classes/Video.html":{}}}],["user_id",{"_index":183,"title":{},"body":{"classes/Comment.html":{},"classes/Video.html":{},"injectables/VideosService.html":{}}}],["username",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService-1.html":{},"modules/DatabaseModule.html":{},"classes/LoginInput.html":{},"classes/RegisterInput.html":{},"classes/User.html":{}}}],["users",{"_index":269,"title":{},"body":{"classes/Status.html":{},"classes/User.html":{}}}],["validator",{"_index":233,"title":{},"body":{"classes/CommentInput.html":{},"classes/LoginInput.html":{},"classes/RegisterInput.html":{},"classes/VideoInput.html":{},"dependencies.html":{}}}],["value",{"_index":310,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":466,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":523,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":518,"title":{},"body":{"properties.html":{}}}],["video",{"_index":71,"title":{"classes/Video.html":{}},"body":{"controllers/AuthController.html":{},"classes/Comment.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{},"controllers/VideosController.html":{},"modules/VideosModule.html":{},"injectables/VideosService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["video.buffer",{"_index":447,"title":{},"body":{"injectables/VideosService.html":{}}}],["video.model",{"_index":214,"title":{},"body":{"classes/Comment.html":{},"classes/Status.html":{},"classes/User.html":{}}}],["video.originalname",{"_index":449,"title":{},"body":{"injectables/VideosService.html":{}}}],["video_id",{"_index":184,"title":{},"body":{"classes/Comment.html":{}}}],["videoinput",{"_index":234,"title":{"classes/VideoInput.html":{}},"body":{"classes/CommentInput.html":{},"classes/VideoInput.html":{},"controllers/VideosController.html":{},"coverage.html":{}}}],["videos",{"_index":270,"title":{},"body":{"classes/Status.html":{},"classes/User.html":{},"classes/Video.html":{},"controllers/VideosController.html":{}}}],["videos.controller",{"_index":413,"title":{},"body":{"modules/VideosModule.html":{}}}],["videos.input",{"_index":381,"title":{},"body":{"controllers/VideosController.html":{}}}],["videos.service",{"_index":374,"title":{},"body":{"controllers/VideosController.html":{},"modules/VideosModule.html":{}}}],["videos/videos.module",{"_index":262,"title":{},"body":{"modules/PagesModule.html":{}}}],["videoscontroller",{"_index":335,"title":{"controllers/VideosController.html":{}},"body":{"controllers/VideosController.html":{},"modules/VideosModule.html":{},"coverage.html":{}}}],["videosmodule",{"_index":260,"title":{"modules/VideosModule.html":{}},"body":{"modules/PagesModule.html":{},"modules/VideosModule.html":{},"index.html":{},"modules.html":{}}}],["videosservice",{"_index":373,"title":{"injectables/VideosService.html":{}},"body":{"controllers/VideosController.html":{},"modules/VideosModule.html":{},"injectables/VideosService.html":{},"coverage.html":{},"index.html":{}}}],["void",{"_index":311,"title":{},"body":{"classes/User.html":{}}}],["yes",{"_index":435,"title":{},"body":{"injectables/VideosService.html":{}}}],["zoom",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ModulesModule.html":{},"modules/PagesModule.html":{},"modules/VideosModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nModulesModule\n\nModulesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nModulesModule->AppModule\n\n\n\n\n\nPagesModule\n\nPagesModule\n\nAppModule -->\n\nPagesModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ModulesModule\n                        \n                        \n                            PagesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PagesModule } from './Pages/pages.module';\nimport { ModulesModule } from './Modules/Modules.module';\n\n@Module({ imports: [ModulesModule, PagesModule] })\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Pages/auth/Auth.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                profile\n                            \n                            \n                                    \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(body: LoginInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n            \n                \n                    Defined in src/Pages/auth/Auth.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                LoginInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        profile\n                        \n                    \n                \n            \n            \n                \n                    \n                    profile(auth: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiHeader({name: 'authKey'})@UseGuards(AuthGuard)@Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/Pages/auth/Auth.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    auth\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(body: RegisterInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n            \n                \n                    Defined in src/Pages/auth/Auth.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                RegisterInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, UseGuards } from '@nestjs/common';\nimport { LoginInput, RegisterInput } from './Auth.input';\nimport { User } from 'src/Modules/Database/models/User.model';\nimport { Auth, AuthGuard } from 'src/Modules/Guards/AuthGuard';\nimport { ApiHeader } from '@nestjs/swagger';\nimport { Video } from 'src/Modules/Database/models/Video.model';\nimport { AuthService } from './Auth.service';\n\n@Controller()\nexport class AuthController {\n  constructor(private readonly service: AuthService) {}\n  @Post('login')\n  login(@Body() body: LoginInput) {\n    return this.service.login(body);\n  }\n  @Post('register')\n  register(@Body() body: RegisterInput) {\n    return this.service.register(body);\n  }\n  @ApiHeader({ name: 'authKey' })\n  @UseGuards(AuthGuard)\n  @Get('profile')\n  async profile(@Auth() auth: User) {\n    return {\n      id: auth.id as number,\n      username: auth.username,\n      avatar: auth.avatar,\n      status_id: auth.status_id as number,\n      status: auth.Status?.name,\n      name: auth.name,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/Modules/Guards/AuthGuard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/Modules/Guards/AuthGuard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/Modules/Guards/AuthGuard.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n  createParamDecorator,\n} from '@nestjs/common';\nimport { FastifyRequest } from 'fastify';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../Auth/Auth.service';\nimport { User } from '../Database/models/User.model';\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private readonly auth: AuthService) {}\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context\n      .switchToHttp()\n      .getRequest();\n    const { authkey } = request.headers;\n    if (!authkey) throw new UnauthorizedException();\n    const data = await this.auth.check(authkey as string);\n    if (!data) throw new UnauthorizedException();\n    request.user = data;\n    return true;\n  }\n}\nexport const Auth = createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request.user;\n  },\n);\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/Modules/Auth/Auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { AuthService } from './Auth.service';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { User } from '../Database/models/User.model';\n@Global()\n@Module({\n  imports: [SequelizeModule.forFeature([User])],\n  providers: [AuthService],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Modules/Auth/Auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(modelUser)\n                    \n                \n                        \n                            \n                                Defined in src/Modules/Auth/Auth.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modelUser\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        check\n                        \n                    \n                \n            \n            \n                \n                    \n                    check(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/Modules/Auth/Auth.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { User } from '../Database/models/User.model';\nimport { InjectModel } from '@nestjs/sequelize';\n\n@Injectable()\nexport class AuthService {\n  constructor(@InjectModel(User) private readonly modelUser: typeof User) {}\n\n  async check(token: string) {\n    const data = await this.modelUser.findOne({\n      where: { authKey: token },\n      include: ['Status'],\n    });\n    return data;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService-1.html":{"url":"injectables/AuthService-1.html","title":"injectable - AuthService-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Pages/auth/Auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(modelUser)\n                    \n                \n                        \n                            \n                                Defined in src/Pages/auth/Auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modelUser\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(body: LoginInput)\n                \n            \n\n\n            \n                \n                    Defined in src/Pages/auth/Auth.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                LoginInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(body: RegisterInput)\n                \n            \n\n\n            \n                \n                    Defined in src/Pages/auth/Auth.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                RegisterInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectModel } from '@nestjs/sequelize';\nimport { LoginInput, RegisterInput } from './Auth.input';\nimport md5 from 'md5';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { User } from 'src/Modules/Database/models/User.model';\nimport makeRandom from 'src/utils/makeRandom';\n\n@Injectable()\nexport class AuthService {\n  constructor(@InjectModel(User) private readonly modelUser: typeof User) {}\n  async register(body: RegisterInput) {\n    const data = await this.modelUser.create(body);\n    data.authKey = makeRandom(32);\n    await data.save();\n    return data.authKey;\n  }\n  async login(body: LoginInput) {\n    const data = await this.modelUser.findOne({\n      where: { username: body.username, password: md5(body.password) },\n    });\n    if (!data) {\n      throw new UnauthorizedException(\n        'Поля с таким логином и паролем не найдено',\n      );\n    }\n    data.authKey = makeRandom(32);\n    await data.save();\n    return data.authKey;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Comment.html":{"url":"classes/Comment.html","title":"class - Comment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Comment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Modules/Database/models/Comment.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                Status\n                            \n                            \n                                    \n                                    \n                                    \n                                status_id\n                            \n                            \n                                    \n                                text\n                            \n                            \n                                    \n                                    Optional\n                                User\n                            \n                            \n                                    \n                                    \n                                user_id\n                            \n                            \n                                    \n                                    Optional\n                                Video\n                            \n                            \n                                    \n                                    \n                                video_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreationOptional\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column(DataType.DATE)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/Database/models/Comment.model.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreationOptional\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoIncrement()@PrimaryKey()@Column(DataType.INTEGER)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/Database/models/Comment.model.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        Status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NonAttribute\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/Database/models/Comment.model.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        status_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreationOptional\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Default(7)@ForeignKey(undefined)@Column(DataType.INTEGER)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/Database/models/Comment.model.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column(DataType.TEXT)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/Database/models/Comment.model.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NonAttribute\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/Database/models/Comment.model.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column(DataType.INTEGER)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/Database/models/Comment.model.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        Video\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NonAttribute\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/Database/models/Comment.model.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        video_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column(DataType.INTEGER)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/Database/models/Comment.model.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CreationOptional,\n  InferAttributes,\n  InferCreationAttributes,\n  NonAttribute,\n} from 'sequelize';\nimport {\n  AutoIncrement,\n  BelongsTo,\n  Column,\n  DataType,\n  Default,\n  ForeignKey,\n  Model,\n  PrimaryKey,\n  Table,\n} from 'sequelize-typescript';\nimport { Video } from './Video.model';\nimport { User } from './User.model';\nimport Status from './Status.model';\n\n@Table({ tableName: 'Comments', updatedAt: false, createdAt: 'date' })\nexport class Comment extends Model,\n  InferCreationAttributes\n> {\n  @AutoIncrement\n  @PrimaryKey\n  @Column(DataType.INTEGER)\n  id: CreationOptional;\n\n  @Column(DataType.TEXT)\n  text: string;\n\n  @ForeignKey(() => Video)\n  @Column(DataType.INTEGER)\n  video_id: number;\n  @BelongsTo(() => Video)\n  Video?: NonAttribute;\n\n  @ForeignKey(() => User)\n  @Column(DataType.INTEGER)\n  user_id: number;\n  @BelongsTo(() => User)\n  User?: NonAttribute;\n\n  @Default(7)\n  @ForeignKey(() => Status)\n  @Column(DataType.INTEGER)\n  status_id: CreationOptional;\n  @BelongsTo(() => Status)\n  Status?: NonAttribute;\n\n  @Column(DataType.DATE)\n  date: CreationOptional;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommentInput.html":{"url":"classes/CommentInput.html","title":"class - CommentInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommentInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Pages/videos/Videos.input.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                comment\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Комментарий'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Pages/videos/Videos.input.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'ID видео'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Pages/videos/Videos.input.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsObject, IsString } from 'class-validator';\n\nexport class VideoInput {\n  @ApiProperty({ description: 'Описание' })\n  @IsString()\n  desc: string;\n}\nexport class CommentInput {\n  @ApiProperty({ description: 'ID видео' })\n  @IsNumber()\n  id: number;\n  @ApiProperty({ description: 'Комментарий' })\n  @IsString()\n  comment: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/Modules/Database/index.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { models } from './models';\n\n@Module({\n  imports: [\n    SequelizeModule.forRoot({\n      dialect: 'mysql',\n      database: 'open_imagination',\n      host: 'localhost',\n      models,\n      username: 'root',\n    }),\n  ],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginInput.html":{"url":"classes/LoginInput.html","title":"class - LoginInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Pages/auth/Auth.input.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Пароль'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Pages/auth/Auth.input.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Логин'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Pages/auth/Auth.input.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class LoginInput {\n  @ApiProperty({ description: 'Логин' })\n  @IsString()\n  @IsNotEmpty()\n  username: string;\n  @ApiProperty({ description: 'Пароль' })\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n}\nexport class RegisterInput {\n  @ApiProperty({ description: 'Логин' })\n  @IsString()\n  @IsNotEmpty()\n  username: string;\n  @ApiProperty({ description: 'Пароль' })\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n  @ApiProperty({ description: 'Почта' })\n  @IsString()\n  @IsNotEmpty()\n  email: string;\n  @ApiProperty({ description: 'Имя' })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ModulesModule.html":{"url":"modules/ModulesModule.html","title":"module - ModulesModule","body":"\n                   \n\n\n\n\n    Modules\n    ModulesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ModulesModule\n\n\n\ncluster_ModulesModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nModulesModule\n\nModulesModule\n\nModulesModule -->\n\nAuthModule->ModulesModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nModulesModule -->\n\nDatabaseModule->ModulesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/Modules/Modules.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            DatabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabaseModule } from './Database';\nimport { AuthModule } from './Auth/Auth.module';\n\n@Module({ imports: [DatabaseModule, AuthModule] })\nexport class ModulesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PagesModule.html":{"url":"modules/PagesModule.html","title":"module - PagesModule","body":"\n                   \n\n\n\n\n    Modules\n    PagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PagesModule\n\n\n\ncluster_PagesModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nPagesModule\n\nPagesModule\n\nPagesModule -->\n\nAuthModule->PagesModule\n\n\n\n\n\nVideosModule\n\nVideosModule\n\nPagesModule -->\n\nVideosModule->PagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/Pages/pages.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            VideosModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthModule } from './auth/Auth.module';\nimport { VideosModule } from './videos/Videos.module';\n\n@Module({ imports: [AuthModule, VideosModule] })\nexport class PagesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterInput.html":{"url":"classes/RegisterInput.html","title":"class - RegisterInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Pages/auth/Auth.input.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Почта'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Pages/auth/Auth.input.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Имя'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Pages/auth/Auth.input.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Пароль'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Pages/auth/Auth.input.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Логин'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Pages/auth/Auth.input.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class LoginInput {\n  @ApiProperty({ description: 'Логин' })\n  @IsString()\n  @IsNotEmpty()\n  username: string;\n  @ApiProperty({ description: 'Пароль' })\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n}\nexport class RegisterInput {\n  @ApiProperty({ description: 'Логин' })\n  @IsString()\n  @IsNotEmpty()\n  username: string;\n  @ApiProperty({ description: 'Пароль' })\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n  @ApiProperty({ description: 'Почта' })\n  @IsString()\n  @IsNotEmpty()\n  email: string;\n  @ApiProperty({ description: 'Имя' })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Status.html":{"url":"classes/Status.html","title":"class - Status","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Status\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Modules/Database/models/Status.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                Comments\n                            \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                tableType\n                            \n                            \n                                    \n                                    Optional\n                                Users\n                            \n                            \n                                    \n                                    Optional\n                                Videos\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        Comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NonAttribute\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HasMany(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/Database/models/Status.model.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreationOptional\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()@AutoIncrement()@Column(DataType.INTEGER)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/Database/models/Status.model.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/Database/models/Status.model.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tableType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/Database/models/Status.model.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        Users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NonAttribute\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HasMany(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/Database/models/Status.model.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        Videos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NonAttribute\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HasMany(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/Database/models/Status.model.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CreationOptional,\n  InferAttributes,\n  InferCreationAttributes,\n  NonAttribute,\n} from 'sequelize';\nimport {\n  AutoIncrement,\n  Column,\n  DataType,\n  HasMany,\n  Model,\n  PrimaryKey,\n  Table,\n} from 'sequelize-typescript';\nimport { User } from './User.model';\nimport { Video } from './Video.model';\nimport { Comment } from './Comment.model';\n\n@Table({ tableName: 'Status', timestamps: false })\nexport default class Status extends Model,\n  InferCreationAttributes\n> {\n  @PrimaryKey\n  @AutoIncrement\n  @Column(DataType.INTEGER)\n  id: CreationOptional;\n  @Column(DataType.STRING(30))\n  name: string;\n  @Column(DataType.STRING)\n  tableType: string;\n  @HasMany(() => User)\n  Users?: NonAttribute;\n\n  @HasMany(() => Video)\n  Videos?: NonAttribute;\n\n  @HasMany(() => Comment)\n  Comments?: NonAttribute;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Modules/Database/models/User.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                accessToken\n                            \n                            \n                                    \n                                    \n                                authKey\n                            \n                            \n                                    \n                                avatar\n                            \n                            \n                                    \n                                    Optional\n                                Comments\n                            \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    Optional\n                                Status\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                status_id\n                            \n                            \n                                    \n                                    \n                                    \n                                username\n                            \n                            \n                                    \n                                    Optional\n                                Videos\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    password\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Unique()@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/Database/models/User.model.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        authKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Unique()@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/Database/models/User.model.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/Database/models/User.model.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        Comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NonAttribute\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HasMany(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/Database/models/User.model.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreationOptional\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column(DataType.DATE)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/Database/models/User.model.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Unique()@AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/Database/models/User.model.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreationOptional\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoIncrement()@PrimaryKey()@Column(DataType.INTEGER)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/Database/models/User.model.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/Database/models/User.model.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        Status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NonAttribute\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/Database/models/User.model.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        status_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreationOptional\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Default(1)@AllowNull(undefined)@ForeignKey(undefined)@Column(DataType.INTEGER)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/Database/models/User.model.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Unique()@AllowNull(undefined)@Column(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/Database/models/User.model.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        Videos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NonAttribute\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HasMany(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/Database/models/User.model.ts:81\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/Modules/Database/models/User.model.ts:42\n                                \n                            \n\n                \n                    \n                        setpassword(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/Modules/Database/models/User.model.ts:45\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import md5 from 'md5';\nimport {\n  CreationOptional,\n  InferAttributes,\n  InferCreationAttributes,\n  NonAttribute,\n} from 'sequelize';\nimport {\n  AllowNull,\n  AutoIncrement,\n  BelongsTo,\n  Column,\n  DataType,\n  Default,\n  ForeignKey,\n  HasMany,\n  Model,\n  PrimaryKey,\n  Table,\n  Unique,\n} from 'sequelize-typescript';\nimport Status from './Status.model';\nimport { Video } from './Video.model';\nimport { Comment } from './Comment.model';\n@Table({ tableName: 'users', createdAt: 'date', updatedAt: false })\nexport class User extends Model,\n  InferCreationAttributes\n> {\n  @AutoIncrement\n  @PrimaryKey\n  @Column(DataType.INTEGER)\n  id: CreationOptional;\n\n  @Unique\n  @AllowNull(false)\n  @Column(DataType.STRING(60))\n  username: string;\n\n  @AllowNull(false)\n  @Column(DataType.STRING)\n  get password(): string {\n    return this.getDataValue('password');\n  }\n  set password(value: string) {\n    this.setDataValue('password', md5(value));\n  }\n\n  @Unique\n  @AllowNull(false)\n  @Column(DataType.STRING)\n  email: string;\n\n  @AllowNull(false)\n  @Column(DataType.STRING)\n  name: string;\n\n  @Column(DataType.STRING)\n  avatar: string | null;\n\n  @Default(1)\n  @AllowNull(false)\n  @ForeignKey(() => Status)\n  @Column(DataType.INTEGER)\n  status_id: CreationOptional;\n\n  @BelongsTo(() => Status)\n  Status?: NonAttribute;\n\n  @Column(DataType.DATE)\n  date: CreationOptional;\n  @Unique\n  @Column(DataType.STRING)\n  authKey: string | null;\n\n  @Unique\n  @Column(DataType.STRING)\n  accessToken: string | null;\n\n  @HasMany(() => Video)\n  Videos?: NonAttribute;\n\n  @HasMany(() => Comment)\n  Comments?: NonAttribute;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Video.html":{"url":"classes/Video.html","title":"class - Video","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Video\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Modules/Database/models/Video.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                link\n                            \n                            \n                                    \n                                    Optional\n                                Status\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                status_id\n                            \n                            \n                                    \n                                    Optional\n                                User\n                            \n                            \n                                    \n                                    \n                                    \n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreationOptional\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column(DataType.DATE)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/Database/models/Video.model.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/Database/models/Video.model.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreationOptional\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoIncrement()@PrimaryKey()@Column(DataType.INTEGER)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/Database/models/Video.model.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        link\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column(DataType.STRING)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/Database/models/Video.model.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        Status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NonAttribute\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/Database/models/Video.model.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        status_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreationOptional\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Default(7)@ForeignKey(undefined)@AllowNull(undefined)@Column(DataType.INTEGER)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/Database/models/Video.model.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NonAttribute\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/Database/models/Video.model.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@AllowNull(undefined)@Column(DataType.INTEGER)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Modules/Database/models/Video.model.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CreationOptional,\n  InferAttributes,\n  InferCreationAttributes,\n  NonAttribute,\n} from 'sequelize';\nimport {\n  AllowNull,\n  AutoIncrement,\n  BelongsTo,\n  Column,\n  DataType,\n  Default,\n  ForeignKey,\n  Model,\n  PrimaryKey,\n  Table,\n} from 'sequelize-typescript';\nimport Status from './Status.model';\nimport { User } from './User.model';\n\n@Table({ tableName: 'Videos', updatedAt: false, createdAt: 'date' })\nexport class Video extends Model,\n  InferCreationAttributes\n> {\n  @AutoIncrement\n  @PrimaryKey\n  @Column(DataType.INTEGER)\n  id: CreationOptional;\n\n  @AllowNull(false)\n  @Column(DataType.STRING)\n  link: string;\n\n  @Column(DataType.STRING)\n  description: string | null;\n\n  @ForeignKey(() => User)\n  @AllowNull(false)\n  @Column(DataType.INTEGER)\n  user_id: number;\n  @BelongsTo(() => User)\n  User?: NonAttribute;\n\n  @Default(7)\n  @ForeignKey(() => Status)\n  @AllowNull(false)\n  @Column(DataType.INTEGER)\n  status_id: CreationOptional;\n  @BelongsTo(() => Status)\n  Status?: NonAttribute;\n\n  @Column(DataType.DATE)\n  date: CreationOptional;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VideoInput.html":{"url":"classes/VideoInput.html","title":"class - VideoInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VideoInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Pages/videos/Videos.input.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                desc\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        desc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Описание'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Pages/videos/Videos.input.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsObject, IsString } from 'class-validator';\n\nexport class VideoInput {\n  @ApiProperty({ description: 'Описание' })\n  @IsString()\n  desc: string;\n}\nexport class CommentInput {\n  @ApiProperty({ description: 'ID видео' })\n  @IsNumber()\n  id: number;\n  @ApiProperty({ description: 'Комментарий' })\n  @IsString()\n  comment: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/VideosController.html":{"url":"controllers/VideosController.html","title":"controller - VideosController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  VideosController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Pages/videos/Videos.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                videos\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                addComment\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                getComment\n                            \n                            \n                                    \n                                    \n                                    \n                                GetMyVideos\n                            \n                            \n                                    \n                                    \n                                GetVideo\n                            \n                            \n                                    \n                                GetVideos\n                            \n                            \n                                    \n                                GetVideosRandom\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        addComment\n                        \n                    \n                \n            \n            \n                \n                    \n                    addComment(body: CommentInput, auth: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiHeader({name: 'authKey'})@Post('comment')@UseGuards(AuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/Pages/videos/Videos.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CommentInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    auth\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(file: Express.Multer.File, body: VideoInput, auth: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiHeader({name: 'authKey'})@Post('add')@FastifyFileInterceptor('video', {})@UseGuards(AuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/Pages/videos/Videos.controller.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                VideoInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    auth\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        getComment\n                        \n                    \n                \n            \n            \n                \n                    \n                    getComment(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('comment/:id')\n                \n            \n\n            \n                \n                    Defined in src/Pages/videos/Videos.controller.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        GetMyVideos\n                        \n                    \n                \n            \n            \n                \n                    \n                    GetMyVideos(auth: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiHeader({name: 'authKey'})@UseGuards(AuthGuard)@Get('my')\n                \n            \n\n            \n                \n                    Defined in src/Pages/videos/Videos.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    auth\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        GetVideo\n                        \n                    \n                \n            \n            \n                \n                    \n                    GetVideo()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('view/')@Get('fc')\n                \n            \n\n            \n                \n                    Defined in src/Pages/videos/Videos.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        GetVideos\n                        \n                    \n                \n            \n            \n                \n                    \n                    GetVideos()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('all')\n                \n            \n\n            \n                \n                    Defined in src/Pages/videos/Videos.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        GetVideosRandom\n                        \n                    \n                \n            \n            \n                \n                    \n                    GetVideosRandom(count: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('random/:count')\n                \n            \n\n            \n                \n                    Defined in src/Pages/videos/Videos.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    count\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  ParseIntPipe,\n  Post,\n  Render,\n  Res,\n  UploadedFile,\n  UploadedFiles,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { VideosService } from './Videos.service';\nimport { Auth, AuthGuard } from 'src/Modules/Guards/AuthGuard';\nimport { User } from 'src/Modules/Database/models/User.model';\nimport { ApiHeader } from '@nestjs/swagger';\nimport * as fs from 'fs';\n\nimport { diskStorage } from 'multer';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { CommentInput, VideoInput } from './Videos.input';\nimport { extname } from 'path';\nimport { FastifyFileInterceptor } from 'nest-fastify-multer';\n\n@Controller('videos')\nexport class VideosController {\n  constructor(private readonly service: VideosService) {}\n\n  @ApiHeader({ name: 'authKey' })\n  @UseGuards(AuthGuard)\n  @Get('my')\n  GetMyVideos(@Auth() auth: User) {\n    return this.service.GetMyVideos(auth);\n  }\n\n  @Get('random/:count')\n  GetVideosRandom(@Param('count', ParseIntPipe) count: number) {\n    return this.service.getRandomVideos(count);\n  }\n\n  @Get('all')\n  GetVideos() {\n    return this.service.GetVideos();\n  }\n\n  // @Get('view/:id')\n  // @Render('render.hbs')\n  // GetVideoHtml(@Param('id') id: string) {\n  //   return { video: `d/${id}` };\n  // }\n\n  @Get('view/')\n  @Get('fc')\n  GetVideo() {\n    return this.service.GetVideo();\n  }\n  @ApiHeader({ name: 'authKey' })\n  @Post('comment')\n  @UseGuards(AuthGuard)\n  async addComment(@Body() body: CommentInput, @Auth() auth: User) {\n    return this.service.AddVideoComment(body.id, body.comment, auth);\n  }\n  @Get('comment/:id')\n  async getComment(@Param('id', ParseIntPipe) id: number) {\n    return this.service.GetVideoComments(id);\n  }\n\n  @ApiHeader({ name: 'authKey' })\n  @Post('add')\n  @FastifyFileInterceptor('video', {})\n  @UseGuards(AuthGuard)\n  async create(\n    @UploadedFile() file: Express.Multer.File,\n    @Body() body: VideoInput,\n    @Auth() auth: User,\n  ) {\n    return this.service.AddMyVideo(auth, file, body.desc);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VideosModule.html":{"url":"modules/VideosModule.html","title":"module - VideosModule","body":"\n                   \n\n\n\n\n    Modules\n    VideosModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VideosModule\n\n\n\ncluster_VideosModule_providers\n\n\n\n\nVideosService\n\nVideosService\n\n\n\nVideosModule\n\nVideosModule\n\nVideosModule -->\n\nVideosService->VideosModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/Pages/videos/Videos.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            VideosService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            VideosController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { VideosController } from './Videos.controller';\nimport { VideosService } from './Videos.service';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { Video } from 'src/Modules/Database/models/Video.model';\nimport { Comment } from 'src/Modules/Database/models/Comment.model';\n\n@Module({\n  imports: [SequelizeModule.forFeature([Video, Comment])],\n  controllers: [VideosController],\n  providers: [VideosService],\n})\nexport class VideosModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VideosService.html":{"url":"injectables/VideosService.html","title":"injectable - VideosService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VideosService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Pages/videos/Videos.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                AddMyVideo\n                            \n                            \n                                    Async\n                                AddVideoComment\n                            \n                            \n                                    Async\n                                GetMyVideos\n                            \n                            \n                                    Async\n                                getRandomVideos\n                            \n                            \n                                    Async\n                                GetVideo\n                            \n                            \n                                    Async\n                                GetVideoComments\n                            \n                            \n                                    Async\n                                GetVideos\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(modelVideo, modelComment)\n                    \n                \n                        \n                            \n                                Defined in src/Pages/videos/Videos.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modelVideo\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelComment\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        AddMyVideo\n                        \n                    \n                \n            \n            \n                \n                    \n                    AddMyVideo(auth: User, video: Express.Multer.File, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/Pages/videos/Videos.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    auth\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    video\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        AddVideoComment\n                        \n                    \n                \n            \n            \n                \n                    \n                    AddVideoComment(id: number, coment: string, auth: User)\n                \n            \n\n\n            \n                \n                    Defined in src/Pages/videos/Videos.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    coment\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    auth\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        GetMyVideos\n                        \n                    \n                \n            \n            \n                \n                    \n                    GetMyVideos(auth: User)\n                \n            \n\n\n            \n                \n                    Defined in src/Pages/videos/Videos.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    auth\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getRandomVideos\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRandomVideos(count: number)\n                \n            \n\n\n            \n                \n                    Defined in src/Pages/videos/Videos.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    count\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        GetVideo\n                        \n                    \n                \n            \n            \n                \n                    \n                    GetVideo(id?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/Pages/videos/Videos.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        GetVideoComments\n                        \n                    \n                \n            \n            \n                \n                    \n                    GetVideoComments(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/Pages/videos/Videos.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        GetVideos\n                        \n                    \n                \n            \n            \n                \n                    \n                    GetVideos()\n                \n            \n\n\n            \n                \n                    Defined in src/Pages/videos/Videos.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, StreamableFile } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { User } from 'src/Modules/Database/models/User.model';\nimport { Video } from 'src/Modules/Database/models/Video.model';\nimport { Comment } from 'src/Modules/Database/models/Comment.model';\nimport fsp from 'fs/promises';\nimport fs from 'fs';\nimport { IsNull } from 'sequelize-typescript';\nimport { Sequelize } from 'sequelize';\n@Injectable()\nexport class VideosService {\n  constructor(\n    @InjectModel(Video) private readonly modelVideo: typeof Video,\n    @InjectModel(Comment) private readonly modelComment: typeof Comment,\n  ) {}\n\n  async GetMyVideos(auth: User) {\n    return await this.modelVideo.findAll({\n      where: { user_id: auth.id },\n    });\n  }\n\n  async AddMyVideo(\n    auth: User,\n    video: Express.Multer.File,\n    description: string,\n  ) {\n    await fsp.writeFile(`clips/${video.originalname}`, video.buffer);\n    return await this.modelVideo.create({\n      link: video.originalname,\n      user_id: auth.id,\n      description: description,\n    });\n  }\n\n  async getRandomVideos(count: number) {\n    console.log(count);\n    return await this.modelVideo.findAll({\n      order: Sequelize.literal('rand()'),\n      limit: 25 \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/Modules/Auth/Auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/Modules/Database/models/Comment.model.ts\n            \n            class\n            Comment\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/Modules/Database/models/Status.model.ts\n            \n            class\n            Status\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/Modules/Database/models/User.model.ts\n            \n            class\n            User\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/Modules/Database/models/Video.model.ts\n            \n            class\n            Video\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/Modules/Database/models/index.ts\n            \n            variable\n            models\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Modules/Guards/AuthGuard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/Modules/Guards/AuthGuard.ts\n            \n            variable\n            Auth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Pages/auth/Auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/Pages/auth/Auth.input.ts\n            \n            class\n            LoginInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/Pages/auth/Auth.input.ts\n            \n            class\n            RegisterInput\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/Pages/auth/Auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/Pages/videos/Videos.controller.ts\n            \n            controller\n            VideosController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/Pages/videos/Videos.input.ts\n            \n            class\n            CommentInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/Pages/videos/Videos.input.ts\n            \n            class\n            VideoInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/Pages/videos/Videos.service.ts\n            \n            injectable\n            VideosService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/makeRandom.ts\n            \n            function\n            makeRandom\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @fastify/static : ^6.10.1\n        \n            @fastify/view : ^7.4.1\n        \n            @nestjs/common : ^9.4.0\n        \n            @nestjs/core : ^9.4.0\n        \n            @nestjs/platform-express : ^9.4.0\n        \n            @nestjs/platform-fastify : ^9.4.0\n        \n            @nestjs/sequelize : ^9.0.2\n        \n            @nestjs/swagger : ^6.3.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            fastify-multer : ^2.0.3\n        \n            handlebars : ^4.7.7\n        \n            md5 : ^2.3.0\n        \n            mysql2 : ^3.3.0\n        \n            nest-fastify-multer : ^1.0.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n        \n            sequelize : ^6.31.1\n        \n            sequelize-typescript : ^2.1.5\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            makeRandom   (src/.../makeRandom.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/makeRandom.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        makeRandom\n                        \n                    \n                \n            \n            \n                \nmakeRandom(length: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ModulesModule\n\n\n\ncluster_ModulesModule_imports\n\n\n\ncluster_PagesModule\n\n\n\ncluster_PagesModule_imports\n\n\n\ncluster_VideosModule\n\n\n\ncluster_VideosModule_providers\n\n\n\n\nModulesModule\n\nModulesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nModulesModule->AppModule\n\n\n\n\n\nPagesModule\n\nPagesModule\n\nAppModule -->\n\nPagesModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nModulesModule -->\n\nAuthModule->ModulesModule\n\n\n\nPagesModule -->\n\nAuthModule->PagesModule\n\n\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nModulesModule -->\n\nDatabaseModule->ModulesModule\n\n\n\n\n\nVideosModule\n\nVideosModule\n\nPagesModule -->\n\nVideosModule->PagesModule\n\n\n\n\n\nVideosService\n\nVideosService\n\nVideosModule -->\n\nVideosService->VideosModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ModulesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VideosModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n        \n            Description : \n        \n            License : ISC\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Auth   (src/.../AuthGuard.ts)\n                        \n                        \n                            models   (src/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/Modules/Guards/AuthGuard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request.user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/Modules/Database/models/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        models\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [User, Comment, Video, Status]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
